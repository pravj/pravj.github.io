<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Node.Js on hack(pravj)</title>
    <link>https://pravj.github.io/tags/node.js/index.xml</link>
    <description>Recent content in Node.Js on hack(pravj)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://pravj.github.io/tags/node.js/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>termping : &lt;3 &#43; Node.js &#43; Streams &#43; CoffeeScript</title>
      <link>https://pravj.github.io/blog/termping/</link>
      <pubDate>Sun, 27 Jul 2014 00:00:00 +0530</pubDate>
      
      <guid>https://pravj.github.io/blog/termping/</guid>
      <description>

&lt;blockquote&gt;
&lt;p&gt;You should have a look at &lt;a href=&#34;https://github.com/pravj/termping.git&#34;&gt;termping&lt;/a&gt;, if you haven&amp;rsquo;t yet.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;what-s-the-fuss-about&#34;&gt;What&amp;rsquo;s the fuss about&lt;/h3&gt;

&lt;p&gt;This Blog is all about development of a game(kind of) &lt;a href=&#34;https://github.com/pravj/termping.git&#34;&gt;termping&lt;/a&gt;, which is a prototype of one of the oldest video game &lt;a href=&#34;https://en.wikipedia.org/wiki/Pong&#34;&gt;Pong&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;But this prototype runs in your system&amp;rsquo;s &lt;a href=&#34;https://en.wikipedia.org/wiki/Computer_terminal&#34;&gt;terminal&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure&gt; &lt;img src=&#34;https://pravj.github.io/images/termping.gif&#34;&gt;
    &lt;figcaption&gt;termping in action&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3 id=&#34;emergence&#34;&gt;Emergence&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;One thing that I just feel, I am getting good at is
&lt;strong&gt;&amp;ldquo;reading and understanding other people&amp;rsquo;s code&amp;rdquo;&lt;/strong&gt; &lt;em&gt;&amp;#35;notprasingmyself&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In this summer I have explored unlimited repository out there on &lt;a href=&#34;https://github.com/pravj&#34;&gt;GitHub&lt;/a&gt;. some for solving any kind of issues I was facing in using them or some for just sake of learning anything new, be it any new language(Ruby) or a new field(Vim) for me.&lt;/p&gt;

&lt;p&gt;One interesting recap is that I was working on a project for my team(&lt;a href=&#34;https://twitter.com/sdslabs&#34;&gt;SDSLabs&lt;/a&gt;) and I was using a ruby library as HTTP client, &lt;a href=&#34;https://github.com/rest-client/rest-client&#34;&gt;Rest-Client&lt;/a&gt;. I started facing issue(obviously) as I was new to Ruby. So I started reading code of Rest-Client just to take a look that what are the ingredients and their quantity in this library.&lt;/p&gt;

&lt;p&gt;finally I completed Rest-Client with a better understanding that solved all my issues with it and gave me introduction to a new field, which is :
&amp;gt; How does HTTP and REST clients works&lt;/p&gt;

&lt;p&gt;Also while learning about the large world of &lt;strong&gt;&lt;a href=&#34;https://github.com/pravj/dotfiles/tree/learning/vim&#34;&gt;Vim&lt;/a&gt;&lt;/strong&gt;, I started developing on a rough idea in my mind. which was to develop a Pong like game, playable in Vim editor itself. I tried it, under the name of &lt;a href=&#34;https://github.com/pravj/vingvong&#34;&gt;vingvong.&lt;/a&gt;. But I was unable to complete it because Vim does not support Asynchronous subprocesses, so I stopped the development.&lt;/p&gt;

&lt;p&gt;May be you have any other way of implementing same or I&amp;rsquo;m wrong somewhere. If so, please let &lt;a href=&#34;https://twitter.com/hackpravj&#34;&gt;me&lt;/a&gt; know.&lt;/p&gt;

&lt;p&gt;In the same mission, one day I was going through project &lt;a href=&#34;https://github.com/visionmedia/nshell&#34;&gt;nshell&lt;/a&gt; of &lt;em&gt;one and only&lt;/em&gt; &lt;strong&gt;&lt;a href=&#34;https://github.com/visionmedia&#34;&gt;visionmedia&lt;/a&gt;&lt;/strong&gt;. I selected this repository because I recently developed an interest in &lt;a href=&#34;https://github.com/pravj/dotfiles&#34;&gt;bash, shells and dotfiles management&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I saw, he was using &lt;a href=&#34;http://nodejs.org/docs/latest/api/stream.html#stream_stream&#34;&gt;Stream&lt;/a&gt; in nshell development. I googled about streams and found many resources, this includes &lt;a href=&#34;http://nodejs.org/docs/latest/api/stream.html&#34;&gt;official stream docs&lt;/a&gt; and &lt;a href=&#34;https://github.com/substack/stream-handbook&#34;&gt;stream-handbook&lt;/a&gt; and many others.&lt;/p&gt;

&lt;p&gt;Before that day, I have seen many people starring the &lt;em&gt;stream-handbook&lt;/em&gt; in my GitHub feed. But I was like &lt;em&gt;this thing does not belongs to me, right now&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;But that day I opened &lt;em&gt;stream-handbook&lt;/em&gt; with a motive to learn something. I started reading it and found that &lt;em&gt;Streams&lt;/em&gt; is a nice topic to learn.&lt;/p&gt;

&lt;p&gt;Suddenly my mind searched something from it&amp;rsquo;s index and showed me result in form of an idea. It was :
&amp;gt; Why don&amp;rsquo;t you just restart that Pingpong thing with this Stream ?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;That&amp;rsquo;s all I wanted.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;development&#34;&gt;Development&lt;/h3&gt;

&lt;p&gt;when I started thinking about Developing, shaping it as a &lt;strong&gt;Node Module&lt;/strong&gt; was the only and right option. I knew already that writing a Node Module in &lt;strong&gt;CoffeeScript&lt;/strong&gt; is both fancy(for world) and easy(for me).&lt;/p&gt;

&lt;p&gt;There was another reason for Choosing CoffeeScript, my experience in CoffeeScript was only limited to write &lt;a href=&#34;https://gist.github.com/pravj/2f500607d0aa1bae26a2&#34;&gt;some&lt;/a&gt; hubot scripts for customizing internal communication at &lt;a href=&#34;https://github.com/sdslabs&#34;&gt;SDSLabs.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I was a cool opportunity to learn and do more things in CoffeeScript, so finally I was like :
&amp;gt; OK, lets move with CoffeeScript.&lt;/p&gt;

&lt;p&gt;One coolest thing is that for CoffeeScript, I have only used &lt;a href=&#34;http://arcturo.github.io/library/coffeescript/&#34;&gt;The Little Book on CoffeeScript&lt;/a&gt;, no StackOverflow here.&lt;/p&gt;

&lt;p&gt;The current version of &lt;strong&gt;termping&lt;/strong&gt; is open-sourced at &lt;a href=&#34;https://github.com/pravj/termping&#34;&gt;GitHub&lt;/a&gt;, feel free to contribute to it.&lt;/p&gt;

&lt;p&gt;Now I&amp;rsquo;ll try to explain Source Code of &lt;strong&gt;termping.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Here is the current file structure of the repository, once you browse it.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.
|__.npmignore
|__src
| |__objects.coffee
| |__game.coffee
| |__movement.coffee
| |__status.coffee
| |__source.coffee
|__Cakefile
|__bin
| |__termping
|__package.json
|__.gitignore
|__README.md
|__docs
| |__termping.gif
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;PS : this tree structure is generated from &lt;a href=&#34;https://github.com/pravj/dotfiles/blob/learning/bin/treegen&#34;&gt;treegen&lt;/a&gt;, my own attempt as the alternative of the great &lt;code&gt;tree&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;you can see, main things are inside &lt;code&gt;/src&lt;/code&gt; directory.&lt;/p&gt;

&lt;h4 id=&#34;1-objects-coffee&#34;&gt;1. objects.coffee&lt;/h4&gt;

&lt;p&gt;Object class keeps the game objects, including &lt;em&gt;ball&lt;/em&gt;, &lt;em&gt;paddle&lt;/em&gt; and &lt;em&gt;data&lt;/em&gt; to be rendered on screen. It also helps to populate the data initially according to terminal size.&lt;/p&gt;

&lt;h4 id=&#34;2-game-coffee&#34;&gt;2. game.coffee&lt;/h4&gt;

&lt;p&gt;Game class combines all available things at one place and makes it possible to play the game. It also invoke things in other classes on some particular events like &lt;em&gt;left&lt;/em&gt;/&lt;em&gt;right&lt;/em&gt; or &lt;em&gt;SpaceBar&lt;/em&gt; key press, that enable pause/resume or movement of paddle.&lt;/p&gt;

&lt;h4 id=&#34;3-movement-coffee&#34;&gt;3. movement.coffee&lt;/h4&gt;

&lt;p&gt;Movement class handles all movement related things. Ex. moving of user&amp;rsquo;s paddle, movement of ball, movement of computer&amp;rsquo;s paddle and one most useful thing &lt;em&gt;Collision Detection&lt;/em&gt;.&lt;/p&gt;

&lt;h4 id=&#34;4-status-coffee&#34;&gt;4. status.coffee&lt;/h4&gt;

&lt;p&gt;status.coffee carries all variable and their values that different classes use throughout the game. which includes, velocity of ball, paddle positions, ball positions, state of game etc.&lt;/p&gt;

&lt;h4 id=&#34;5-source-coffee&#34;&gt;5. source.coffee&lt;/h4&gt;

&lt;p&gt;Source class is leading character in the movie. This is the place where all that Stream thing shows the magic. What it does is to &lt;strong&gt;pipe&lt;/strong&gt; the data to the &lt;strong&gt;stdout&lt;/strong&gt; that is to be rendered on screen. That&amp;rsquo;s why I named it as Source. Other classes just work together and periodically update the data.&lt;/p&gt;

&lt;h3 id=&#34;learning&#34;&gt;Learning&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;finally the thing is that, was this all worth doing ?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Answer is : &lt;strong&gt;Obviously, Yes. It&amp;rsquo;s always good to be pragmatic.&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Now I feel as good with &lt;strong&gt;CoffeeScript&lt;/strong&gt; as I feel with my love, &lt;strong&gt;Python&lt;/strong&gt;.

&lt;ul&gt;
&lt;li&gt;as the Book says, CoffeeScript is a little language, but it&amp;rsquo;s pretty cool one.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Finally I have a &lt;a href=&#34;https://www.npmjs.org/package/termping&#34;&gt;NPM Module&lt;/a&gt; under my name \m/.

&lt;ul&gt;
&lt;li&gt;I have completed things in form of NPM modules 2-3 times but never published them, because I developed them for internal/local use only.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;I continued working on it, because I just wanted to complete that un-complete &lt;a href=&#34;https://github.com/pravj/vingvong&#34;&gt;vingvong&lt;/a&gt; thing.

&lt;ul&gt;
&lt;li&gt;Finally now, the revenge has been taken, &lt;strong&gt;Yo&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;It was the motive to complete it, that&amp;rsquo;s why I have added that ♥ in starting, instead of adding it in last.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;extra-learning&#34;&gt;Extra Learning&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Extra learning just means, things that I explored while developing it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;termping&lt;/strong&gt; is entirely developed in &lt;strong&gt;Vim&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;you can smell it&lt;/em&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Git&lt;/strong&gt; repo in &lt;strong&gt;termping&lt;/strong&gt; uses a pattern in it&amp;rsquo;s &lt;a href=&#34;https://github.com/pravj/termping/commits/master&#34;&gt;commit messages&lt;/a&gt;.

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Commit messages uses a Prefix with them, which is&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;add&lt;/strong&gt; : when your commit is adding something new to the repository.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;change&lt;/strong&gt; : when your commit is changing something that already exists.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;remove&lt;/strong&gt; : when your commit is removing things from the repository.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;fix&lt;/strong&gt; : when commit fixes something wrong with repository.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;update&lt;/strong&gt; : when commit updates version info about repository.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Commit messages respects everything &lt;a href=&#34;http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html&#34;&gt;suggested&lt;/a&gt; by the great man of &lt;em&gt;Vim World&lt;/em&gt;, &lt;a href=&#34;https://github.com/tpope&#34;&gt;Tim Pope&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;contribution&#34;&gt;Contribution&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;termping&lt;/strong&gt; is still not complete, what you can contribute is :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A scoring thing, that counts score and decide winner when one player reach at score limit.&lt;/li&gt;
&lt;li&gt;A level thing, that divides the game in parts depending on level of difficulty.&lt;/li&gt;
&lt;li&gt;Feel free to open any &lt;a href=&#34;https://github.com/pravj/termping/issues&#34;&gt;issue&lt;/a&gt; or &lt;a href=&#34;https://github.com/pravj/termping/pulls&#34;&gt;Pull requests&lt;/a&gt; with a feature you want there.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I am not directly writing any more code to it right now, because I have to get involved with some other necessary things, but I will try to helps anyone interested.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It was a great journey so far, with nice learning experience.&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>