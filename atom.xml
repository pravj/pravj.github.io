<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Pravendra Singh</title>
 <link href="//pravj.github.io/atom.xml" rel="self"/>
 <link href="//pravj.github.io/"/>
 <updated>2015-03-07T01:56:11+05:30</updated>
 <id>//pravj.github.io</id>
 <author>
   <name>Pravendra Singh</name>
   <email>hackpravj@gmail.com</email>
 </author>

 
 <entry>
   <title>Holy Aesthete &#58; painting a virtual wall</title>
   <link href="//pravj.github.io/blog/painting-a-virtual-wall/"/>
   <updated>2015-03-06T00:00:00+05:30</updated>
   <id>//pravj.github.io/blog/painting-a-virtual-wall</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;//pravj.github.io/assets/painting-a-virtual-wall/wall.jpg&quot; alt=&quot;Virtual-Wall&quot; title=&quot;Virtual Wall&quot;&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Today in India, it&amp;#39;s the day of &lt;a href=&quot;http://en.wikipedia.org/wiki/Holi&quot;&gt;&lt;em&gt;Holi&lt;/em&gt;&lt;/a&gt;, the festival of colors.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Yesterday, it was the end of our midterm exams. \o/.&lt;/p&gt;

&lt;p&gt;During the last minutes, I decided to stop writing after matching an answer with the person sitting next to me. I was all set to run outside the hall and smell the &lt;em&gt;woot! no more exams left&lt;/em&gt; scent in the air.&lt;/p&gt;

&lt;p&gt;I have one strange habit of drawing random things in my notebook, ranging from literally anything to &lt;em&gt;K-nearest&lt;/em&gt; girls. All the drawings are terrible though.&lt;/p&gt;

&lt;p&gt;So I started utilizing rest of the time by drawing in the backside of exam paper. After a little journey to some wonderland, I had this weird sounding thought in my mind, &lt;em&gt;to write something that simulates a painted wall.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Then the exam ended, we left the hall, enjoyed the &lt;em&gt;Holi&lt;/em&gt; all day with batchmates.&lt;/p&gt;

&lt;p&gt;That &lt;em&gt;weird thought&lt;/em&gt; was still there in my mind, deep somewhere. I decided to give it a shout next morning. And you never need a &lt;em&gt;halcion&lt;/em&gt; after ~40 hours of &lt;em&gt;not sleeping&lt;/em&gt; and doing &lt;em&gt;not so successful&lt;/em&gt; attempt of &lt;em&gt;cram&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Today, I started justifying that thought, picked up &lt;em&gt;golang&lt;/em&gt; for it and created a directory, &lt;em&gt;~/go/src/github/pravj/wall&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Wait! let&amp;#39;s talk over. Have you ever painted a wall before?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Well! I have. If not, you must have seen people doing it. &lt;em&gt;What happens when you start with the brush?&lt;/em&gt; Something like this picture.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//pravj.github.io/assets/painting-a-virtual-wall/wall-paint.jpg&quot; alt=&quot;wall-paint&quot; title=&quot;Wall Paint&quot;&gt;&lt;/p&gt;

&lt;p&gt;Here in the picture, the part painted by each color doesn&amp;#39;t have a specific shape.&lt;/p&gt;

&lt;p&gt;So, in my attempt, I assumed that there exists a central rectangular shape in color block generated by each brush swipe. And the final block also contains some &lt;em&gt;noise&lt;/em&gt; around that rectangle, resulting in the final irregular shape.&lt;/p&gt;

&lt;p&gt;I started with those rectangles, equally spaced with each other. The space was for the noise interference I was planning. Result was this, fix colored image.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//pravj.github.io/assets/painting-a-virtual-wall/first-stage.jpg&quot; alt=&quot;First-Stage&quot; title=&quot;First Stage&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Then I added the &lt;em&gt;noise&lt;/em&gt; on each rectangle. For this, instead of fix sized rectangle. I added some random lengthy stripes around the block, colored same as the block. The result was this image, fixed color again.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//pravj.github.io/assets/painting-a-virtual-wall/second-stage.jpg&quot; alt=&quot;Second-Stage&quot; title=&quot;Second Stage&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;After applying random colors to each block, it generates image similar to the one given below. The ideal thing to do would be, coloring each block in a way that it&amp;#39;s different from its surrounding block color. Something like the classical &lt;a href=&quot;http://en.wikipedia.org/wiki/Four_color_theorem&quot;&gt;Four Color Theorem&lt;/a&gt;, variant of the &lt;a href=&quot;http://en.wikipedia.org/wiki/Constraint_satisfaction_problem&quot;&gt;Constraint satisfaction problem&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//pravj.github.io/assets/painting-a-virtual-wall/third-stage.jpg&quot; alt=&quot;Third-Stage&quot; title=&quot;Third Stage&quot;&gt;&lt;/p&gt;

&lt;p&gt;But in this case, the probability of the ideal case violation is &lt;em&gt;lilliputian&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Precisely, for a &lt;a href=&quot;http://en.wikipedia.org/wiki/Cross&quot;&gt;slanted saltire(cross)&lt;/a&gt; shape divided in five squares, the probability of central square having same color as any surrounding square will be around 2 in 10 million.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//pravj.github.io/assets/painting-a-virtual-wall/probability.png&quot; alt=&quot;Probability&quot;&gt;&lt;/p&gt;

&lt;p&gt;So let&amp;#39;s ignore it like a pigeon closing its eyes in front of a venerer cat.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Now I was concerned about the equally spaced color blocks. Things were still not in the way I wanted them to be. It looked like there is a pattern inside. As systems having more entropy are more stable and &lt;em&gt;beautiful&lt;/em&gt;. I decided to put color blocks at random places in the image, result was this.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//pravj.github.io/assets/painting-a-virtual-wall/fourth-stage.jpg&quot; alt=&quot;Fourth-Stage&quot; title=&quot;Fourth Stage&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;After this all, the central rectangle that I have assumed for the structure, was clearly visible in the block. To conceal that, I formatted the block such that the &lt;em&gt;noise&lt;/em&gt; along the block-width depends on the index of the row in block matrix. Now, it was better than the last one.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//pravj.github.io/assets/painting-a-virtual-wall/final-stage.jpg&quot; alt=&quot;Final-Stage&quot; title=&quot;Final Stage&quot;&gt;&lt;/p&gt;

&lt;p&gt;This is what I have thought about. A wall painted by some children in their tiffin time.&lt;/p&gt;

&lt;p&gt;This may sound like a dumb thing to work on, it&amp;#39;s actually. It&amp;#39;s just a combination of some &lt;em&gt;for&lt;/em&gt; and &lt;em&gt;if-else&lt;/em&gt; loops.&lt;/p&gt;

&lt;p&gt;But this is more than just dumb, now I feel relieved as I made it real what I have thought about, something like Aaron has said.&lt;/p&gt;

&lt;h3&gt;Behind the scene&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;While doing this, I painted one of my room wall, &lt;em&gt;hypothetically&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;You must have got the idea behind this post&amp;#39;s heading. &lt;em&gt;The Holi Fever&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Today, my room&amp;#39;s light is not working and I wrote this in the screen light.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Source Code : &lt;a href=&quot;https://github.com/pravj/virtual-wall&quot;&gt;virtual-wall&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
 </entry>
 
 <entry>
   <title>Introducing Penticons &#58; The Hash Game</title>
   <link href="//pravj.github.io/blog/penticons-the-hash-game/"/>
   <updated>2015-02-08T00:00:00+05:30</updated>
   <id>//pravj.github.io/blog/penticons-the-hash-game</id>
   <content type="html">&lt;p&gt;Jennifer Lawrence fan, huh? It was &lt;em&gt;The Hash Game&lt;/em&gt; by the way. Still in? Kewl.&lt;/p&gt;

&lt;h1&gt;What&amp;#39;s the buzz all about?&lt;/h1&gt;

&lt;p&gt;Unfortunately, there is no buzz. This post is about development of &lt;a href=&quot;https://github.com/penticons&quot;&gt;Penticons&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;Penticons. What?&lt;/h1&gt;

&lt;p&gt;Remember those &lt;a href=&quot;http://a0.twimg.com/sticky/default_profile_images/default_profile_6_normal.png&quot;&gt;egg shaped profile pictures&lt;/a&gt; on Twitter? They are automaticaly linked to your profile, when you forget to upload your custom profile picture.&lt;/p&gt;

&lt;p&gt;Different services uses different default profile pictures. For example, Quora uses &lt;a href=&quot;http://qph.is.quoracdn.net/main-qimg-caf2e843c5e4c9dfec11bf60f9e82ccb?convert_to_webp=true&quot;&gt;this image&lt;/a&gt; of their co-founder Charlie Cheever.&lt;/p&gt;

&lt;p&gt;In Internet&amp;#39;s language, these profile pictures are called &lt;em&gt;Avatars&lt;/em&gt;. They represents a particular user or object on the Internet.&lt;/p&gt;

&lt;p&gt;As we have seen, Quora provides a single image as the default avatar. What if, you want to distinguish between users on the basis of their &lt;em&gt;avatars&lt;/em&gt;?&lt;/p&gt;

&lt;p&gt;This particular problem to recognize users or objects according to their &lt;em&gt;avatar&lt;/em&gt; images was the main force behind the invention of &lt;a href=&quot;http://en.wikipedia.org/wiki/Identicon&quot;&gt;Identicons&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;An Identicon is a visual representation of a &lt;strong&gt;hash value&lt;/strong&gt;, uniquely* mapped to any object on the internet.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Penticons&lt;/em&gt; are just another implementation of identicons. But it tries to solve a key problem with available identicons. Let&amp;#39;s see how.&lt;/p&gt;

&lt;h1&gt;Hash value. What?&lt;/h1&gt;

&lt;p&gt;Let&amp;#39;s put this identicon thingy in the left and talk on something interesting.&lt;/p&gt;

&lt;p&gt;Do you know, How do they store your password in the Facebook? Obviously you do, but in case you don&amp;#39;t, let me confess something.&lt;/p&gt;

&lt;p&gt;They have some guys sitting there, they remember all your passwords and match it to your input whenever you log in to the service. That simple it is.&lt;/p&gt;

&lt;p&gt;Facebook also keeps a &lt;em&gt;hashed&lt;/em&gt; version of your passwords, in case all those smart guys are on leave, they just &lt;em&gt;hash&lt;/em&gt; your input again to match with their stored value. They log you in, if both of the values are same.&lt;/p&gt;

&lt;p&gt;In case you are thinking, why do they &lt;em&gt;hash&lt;/em&gt; your passwords? They do it to make sure that nobody really knows your passwords except those &lt;em&gt;smart and loyal&lt;/em&gt; guys.&lt;/p&gt;

&lt;h1&gt;Hash.. Hash.. What the Hash?&lt;/h1&gt;

&lt;p&gt;Let&amp;#39;s fly back to the junior mathematics class and consider this tiny function. &lt;img src=&quot;//pravj.github.io/assets/penticons/function.png&quot; alt=&quot;function&quot;&gt;
Now, if I ask, what is the value of x when the value of function is 0? You can answer this easily by solving this simple quadratic equation. The values will be 2 and 1.&lt;/p&gt;

&lt;p&gt;What if I change the function to a bit more horrible one. For example, take this. &lt;img src=&quot;//pravj.github.io/assets/penticons/hard-function.png&quot; alt=&quot;hard-function&quot;&gt;&lt;/p&gt;

&lt;p&gt;Feeling cold, huh? Well! you can still find the roots but with a bit more effort. One simple effort you can do is to &lt;em&gt;google&lt;/em&gt; this equation and you&amp;#39;ll find it on the very first result page.&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;Hash Function&lt;/em&gt; we were talking about is one similar function that takes a value and returns the mapped value.&lt;/p&gt;

&lt;p&gt;But in case of the &lt;em&gt;Cryptographic Hash Functions&lt;/em&gt;, it&amp;#39;s pretty hard to get back the &lt;em&gt;pre-image&lt;/em&gt; of a function value, somewhat like the second function above.&lt;/p&gt;

&lt;p&gt;Additionally, these &lt;em&gt;Hash Functions&lt;/em&gt; are supposed to be &lt;em&gt;injective&lt;/em&gt; in nature. Unlike the first function above, which has two roots 2 and 1. In reality they are not totally injetive, though. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/MD5&quot;&gt;MD5&lt;/a&gt; and &lt;a href=&quot;http://en.wikipedia.org/wiki/SHA-1&quot;&gt;SHA-1&lt;/a&gt; are two such &lt;em&gt;Cryptographic Hash Functions&lt;/em&gt;.&lt;/p&gt;

&lt;h1&gt;Any wrong with these Hash Functions?&lt;/h1&gt;

&lt;p&gt;Yeah! Let&amp;#39;s consider the MD5 hash function.&lt;/p&gt;

&lt;p&gt;It generates a 128 bit hash-value for any argument. In the text format, it&amp;#39;s written as a 32 digit hexadecimal number.&lt;/p&gt;

&lt;p&gt;For example, the word &amp;quot;alpha&amp;quot; results in, &lt;em&gt;2c1743a391305fbf367df8e4f069f9f9&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Can you guess, what is the maximum possible hash count MD5 can generate?
&lt;img src=&quot;//pravj.github.io/assets/penticons/md5-count.png&quot; alt=&quot;md5-count&quot;&gt; So if you have more elements than this count to hash, MD5 would be producing similar hashes for all the extra elements.&lt;/p&gt;

&lt;p&gt;This is the case when MD5 is pure as hell, but it&amp;#39;s not actually.&lt;/p&gt;

&lt;p&gt;There are many reports showing cryptographic weakness of MD5. For example, consider &lt;a href=&quot;http://www.mathstat.dal.ca/%7Eselinger/md5collision/&quot;&gt;this report&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;Why Penticons?&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;Penticons tries to solve one key problem with available identicons.&lt;/em&gt; Let me explain.&lt;/p&gt;

&lt;p&gt;They are developed on top of the identicons that &lt;a href=&quot;https://github.com/blog/1586-identicons&quot;&gt;GitHub provides&lt;/a&gt;. There are &lt;a href=&quot;https://github.com/search?utf8=%E2%9C%93&amp;amp;q=identicon&quot;&gt;many other&lt;/a&gt; similar identicon implementations available on GitHub.&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s take an inside on How these identicons works.&lt;/p&gt;

&lt;p&gt;They generates a 5x5 pixel sprites, where they choose to color some of the pixel and left rest pixels as blank, according to the hash of user&amp;#39;s handle. They also have a vertical axis of symmetry, so the identicon is similar from left to right. Finally they color non-blank pixels with a color.&lt;/p&gt;

&lt;p&gt;Now, what is the maximum number of identicons generated this way?&lt;/p&gt;

&lt;p&gt;Suppose they are using 20 colors to fill in the non-blank pixels, they are &lt;a href=&quot;https://github.com/cupcake/sigil/blob/6bf9722f2ae82f58a0c7d48daeb40ec844b78eae/server.go#L20-L29&quot;&gt;not using&lt;/a&gt; this much colors, though. Then total possible identicon count will be :
&lt;img src=&quot;//pravj.github.io/assets/penticons/total-identicon.png&quot; alt=&quot;total-identicons&quot;&gt;&lt;/p&gt;

&lt;p&gt;On the other hand, &lt;em&gt;Penticons&lt;/em&gt; uses &lt;a href=&quot;https://github.com/penticons/penticons.go/blob/master/utils/utils.go#L21-L25&quot;&gt;5 colors&lt;/a&gt; only, from GitHub&amp;#39;s contribution calendar. They also have a vertical axis of symmetry.&lt;/p&gt;

&lt;p&gt;But instead of using a fix color to fill in, it uses any one of the 5, according to the hash value. This way, total number of identicons will be :&lt;img src=&quot;//pravj.github.io/assets/penticons/total-penticons.png&quot; alt=&quot;total-penticons&quot;&gt;&lt;/p&gt;

&lt;p&gt;Which is way more than other implementations, so the rate of collision is also less here.&lt;/p&gt;

&lt;h1&gt;Now what?&lt;/h1&gt;

&lt;p&gt;I made an organization for &lt;a href=&quot;https://github.com/penticons&quot;&gt;Penticons&lt;/a&gt;; just to look cool, though. I think so.&lt;/p&gt;

&lt;p&gt;Last night, I wrote the &lt;a href=&quot;https://github.com/penticons/penticons.go&quot;&gt;golang implementation&lt;/a&gt; for &lt;em&gt;Penticons&lt;/em&gt;. My friend &lt;a href=&quot;https://github.com/nkman&quot;&gt;Nairitya&lt;/a&gt; will be writing some more very soon, at-least he promised me. Let&amp;#39;s see.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Avatar&lt;/em&gt; for the organization is a penticon itself, of the word &amp;quot;Penticons&amp;quot;.
&lt;img src=&quot;//pravj.github.io/assets/penticons/avatar.png&quot; alt=&quot;avatar&quot;&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Open Source Presence Infographic of Indian Startups</title>
   <link href="//pravj.github.io/blog/open-source-presence-infographic/"/>
   <updated>2015-01-17T00:00:00+05:30</updated>
   <id>//pravj.github.io/blog/open-source-presence-infographic</id>
   <content type="html">&lt;p&gt;Technically speaking, organizations used in this report are no more only a &lt;em&gt;startup&lt;/em&gt; now, but I hope you people won&amp;#39;t mind this and aren&amp;#39;t gonna launch a drone on me.&lt;/p&gt;

&lt;h2&gt;Abstract&lt;/h2&gt;

&lt;p&gt;I think, &lt;em&gt;something&lt;/em&gt; is clear from the name itself, is it? Well! it should.&lt;/p&gt;

&lt;p&gt;This report tries to plot all the involved organizations on the Open-Source portal. It tries to tell that, in the race to achieve their goals, what different organizations are doing there, for/in the community.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s pretty biased though, because this report uses only one platform of the Open-Source community, GitHub.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This report doesn&amp;#39;t measure the success of involved organizations; it simply can&amp;#39;t. They all are doing good in their fields, that&amp;#39;s why they are here.&lt;/em&gt; :tophat:&lt;/p&gt;

&lt;h2&gt;Motive&lt;/h2&gt;

&lt;p&gt;I think it was almost mid of the December last year when I saw the &lt;a href=&quot;http://yourstory.com/2014/12/techie-tuesdays-amod-malviya-cto-flipkart/&quot;&gt;interview&lt;/a&gt; of Flipkart&amp;#39;s CTO &lt;em&gt;Amod Malviya&lt;/em&gt; in a YourStory article. I started reading that and kept reading till the end. At the end my reaction was, &lt;em&gt;wow! this man is awesome&lt;/em&gt; and he is indeed. I have seen many of his talks after reading that interview.&lt;/p&gt;

&lt;p&gt;That interview made a different impression on me. I liked his words where he was talking about building a top class internet infrastructure in India. I don&amp;#39;t know what you people think of Flipkart, Myntra etc. but what I think is that they are evolving continuously, at least in the technical aspect. That&amp;#39;s why they are in the marathon and Amazon itself is in the race with them. &lt;/p&gt;

&lt;p&gt;So, after a while I found myself on the GitHub organization of Flipkart and I was scrolling through their projects there. Then the idea of this report popped-up in my mind and here I&amp;#39;m, struggling with it.&lt;/p&gt;

&lt;h2&gt;For What Joy? Is there a need?&lt;/h2&gt;

&lt;p&gt;The earth will keep rotating without this report but it&amp;#39;s kinda necessary for technical organizations to be a part of current Open-Source era. I mean as they say in the &lt;em&gt;Group Dynamics&lt;/em&gt;, If you&amp;#39;re part of a group then you learn for other members and they learn from you.&lt;/p&gt;

&lt;p&gt;Do you remember something named Facebook? Lets take an example from them.&lt;/p&gt;

&lt;p&gt;Maybe that you take PHP as &lt;em&gt;a language for the kids&lt;/em&gt; but keep in mind that &lt;em&gt;The Social Network&lt;/em&gt; was initially developed in that same PHP. But as they started growing and feeling glitch using it; seeing that the :santa: was not coming to help them, they attempted building something on their own. Finally today, we know the inventions as &lt;a href=&quot;http://hhvm.com/&quot;&gt;HHVM&lt;/a&gt; and &lt;a href=&quot;http://hacklang.org/&quot;&gt;Hack language&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So, the thing is &lt;em&gt;don&amp;#39;t wait for santa and build cool things that matters&lt;/em&gt;. Big organizations are already doing it, be it &lt;a href=&quot;https://github.com/facebook/hhvm&quot;&gt;hhvm&lt;/a&gt;, &lt;a href=&quot;https://github.com/facebook/react&quot;&gt;react&lt;/a&gt; by Facebook or &lt;a href=&quot;https://github.com/twitter/typeahead.js&quot;&gt;typeahead.js&lt;/a&gt; by Twitter or &lt;a href=&quot;https://github.com/google/web-starter-kit&quot;&gt;web-starter-kit&lt;/a&gt; by Google and many more by others.&lt;/p&gt;

&lt;h2&gt;Involved Organizations&lt;/h2&gt;

&lt;p&gt;I do believe that the organization selection part was a bit biased as I wanted to have my favorite organizations first on the list, like HackerEarth, Hasgeek, Housing, Flipkart, Wingify and Zomato etc.&lt;/p&gt;

&lt;p&gt;It was disappointing to see that Housing was not on the GitHub by that time and Zomato&amp;#39;s organization was having zero public activities.&lt;/p&gt;

&lt;p&gt;Finally, I selected 15 startups, giving priority to my favorite ones.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cucumbertown.com/&quot;&gt;Cucumbertown&lt;/a&gt; - Follow great cooks, showcase your cooking, build a following&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://exotel.in/&quot;&gt;Exotel&lt;/a&gt; - Reliable Cloud Telephony System for your business&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.flipkart.com/&quot;&gt;Flipkart&lt;/a&gt; - Online Shopping India&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://freshdesk.com/&quot;&gt;Freshdesk&lt;/a&gt; - Online customer support software and helpdesk solution&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.hackerearth.com/&quot;&gt;HackerEarth&lt;/a&gt; - Programming challenges and Developer jobs&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://hasgeek.com/&quot;&gt;HasGeek&lt;/a&gt; - HasGeek organises events for geeks&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.instamojo.com/v2/&quot;&gt;Instamojo&lt;/a&gt; - Easiest Way to Collect Payments Online&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.myntra.com/&quot;&gt;Myntra&lt;/a&gt; - Online Shopping India&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.mysmartprice.com/&quot;&gt;MySmartPrice&lt;/a&gt; - Compare the best prices from online retailers&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.practo.com/&quot;&gt;Practo&lt;/a&gt; - Find Best Doctors and Book Appointments Online&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.shephertz.com/&quot;&gt;ShepHertz&lt;/a&gt; - Complete Cloud Ecosystem for App/Game Developers&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.urbanladder.com/&quot;&gt;Urban Ladder&lt;/a&gt; - Furniture Online Shopping Store&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://webengage.com/&quot;&gt;WebEngage&lt;/a&gt; - On-Site Customer Engagement Suite&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wingify.com/&quot;&gt;Wingify&lt;/a&gt; - Website Optimization tools that simply work&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.zomato.com/&quot;&gt;Zomato&lt;/a&gt; - Discover great places to eat around you&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There is a section here in this report, which uses last year&amp;#39;s GitHub activity of organizations, so I killed my idea of replacing Zomato by someone else as the year was gone and it was kinda tough to jump traditional API &lt;a href=&quot;https://developer.github.com/v3/repos/statistics/#participation&quot;&gt;bumper&lt;/a&gt; and collect data.&lt;/p&gt;

&lt;p&gt;As I said Zomato have zero public activity last year but it doesn&amp;#39;t mean they are not good, they are doing pretty good; aquiring it all, at a rate of hurricane wind speed and serving in cities more than you&amp;#39;ve ever been in your life. Maybe they are using some other platform, a local Git hosting or something.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;em&gt;You better zoom-in the images or open them in a different tab.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;1. Appearance Timeline of Organizations&lt;/h2&gt;

&lt;p&gt;Do you know, when all of these organizations were found? Not sure?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//pravj.github.io/assets/ospi/appearance-timeline.png&quot; alt=&quot;Apperance-Timeline&quot;&gt;&lt;/p&gt;

&lt;p&gt;This plot shows &lt;em&gt;relative appearance&lt;/em&gt; of selected organizations both in the public world as well as in the open-source world.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Add legend text in the image.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;I didn&amp;#39;t know that Myntra was founded a bit earlier than Flipkart, who &lt;a href=&quot;http://timesofindia.indiatimes.com/tech/tech-news/Flipkart-acquires-Myntra/articleshow/35472797.cms&quot;&gt;aquired&lt;/a&gt; the older player recently.&lt;/li&gt;
&lt;li&gt;Myntra and Flipkart came in existance before the GitHub itself.&lt;/li&gt;
&lt;li&gt;We can see a large gap between apperance on these two portals for Flipkart, Myntra and Zomato, Myntra being the slowest one to join.&lt;/li&gt;
&lt;li&gt;Some organizations like Instamojo, HackerEarth and HasGeek felt the need of time and took no significant time in this.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Well! in case if you&amp;#39;re thinking that this information is all chatter, let me present something interesting.&lt;/p&gt;

&lt;p&gt;Go back and see the image carefully and you&amp;#39;ll notice something different from others for Cucumbertown and HasGeek.&lt;/p&gt;

&lt;p&gt;Yes! the GitHub organizations for these two were created before their public launching itself. &lt;em&gt;Sounds interesting, right?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I can&amp;#39;t say for Cucumbertown now but I can present a supporting theory to prove this for the HasGeek.&lt;/p&gt;

&lt;p&gt;Do you guys remeber what was the first event that HasGeek organised? It was &lt;a href=&quot;http://wiki.hasgeek.in/DocType_HTML5&quot;&gt;DocType HTML5&lt;/a&gt;, you silly. The event was held on October, 2010 and HasGeek was pubilcally launched in December, 2010. You can fly to their GitHub account and check that they are developing &lt;a href=&quot;https://github.com/hasgeek/doctypehtml5&quot;&gt;hasgeek/doctypehtml5&lt;/a&gt; since then.&lt;/p&gt;

&lt;p&gt;Maybe organising this event was the inspiration behind launching the HasGeek, I need to hear HasGeek founder &lt;a href=&quot;https://twitter.com/jackerhack&quot;&gt;Kiran&lt;/a&gt;&amp;#39;s words on it, though.&lt;/p&gt;

&lt;h2&gt;2. Repository Status&lt;/h2&gt;

&lt;p&gt;As we all know, repository is an important component of GitHub&amp;#39;s ecosystem.&lt;/p&gt;

&lt;h3&gt;2.1. Public Repository Status&lt;/h3&gt;

&lt;p&gt;This section deals with no. of public repositories for each involved organization.
&lt;img src=&quot;//pravj.github.io/assets/ospi/repository-status.png&quot; alt=&quot;Public-Repository-Count&quot;&gt;&lt;/p&gt;

&lt;p&gt;Cloud services provider ShepHertz has maximum no. of public repositories there, mainly based on their &lt;em&gt;App42&lt;/em&gt; service stack. Flipkart and HasGeek also have significant no. of repositories, rest are the organizations are building their store gradually.&lt;/p&gt;

&lt;p&gt;No. of repositories on GitHub is not the right thing to measure about, though.&lt;/p&gt;

&lt;h3&gt;2.2. Stars Distribution&lt;/h3&gt;

&lt;p&gt;As I said, having more number of repositories doesn&amp;#39;t explicitly show your popularity. It&amp;#39;s not an old wars between states where king with more elephants was supposed to be the winner.&lt;/p&gt;

&lt;p&gt;But no. of stars on any GitHub repository can represent its vogue, &lt;em&gt;leave the case where they&amp;#39;re fake.&lt;/em&gt;
&lt;img src=&quot;//pravj.github.io/assets/ospi/stars-distribution.png&quot; alt=&quot;Stars-Distribution&quot;&gt;&lt;/p&gt;

&lt;p&gt;This graph represents the stars distribution on all the repositories of involved organizations.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Top 10 repositories according to no. of stars&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/wingify/please.js&quot;&gt;wingify/please.js&lt;/a&gt; &amp;#183; 211 &amp;#x2606;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/flipkart/hostdb&quot;&gt;flipkart/HostDB&lt;/a&gt; 190 &amp;#183; &amp;#x2606;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/myntra/MYNStickyFlowLayout&quot;&gt;myntra/MYNStickyFlowLayout&lt;/a&gt; &amp;#183; 133 &amp;#x2606;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/wingify/dom-comparator&quot;&gt;wingify/dom-comparator&lt;/a&gt; &amp;#183; 129 &amp;#x2606;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/hasgeek/lastuser&quot;&gt;hasgeek/lastuser&lt;/a&gt; &amp;#183; 113 &amp;#x2606;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/flipkart/phantom&quot;&gt;flipkart/phantom&lt;/a&gt; &amp;#183; 71 &amp;#x2606;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/hasgeek/hasjob&quot;&gt;hasgeek/hasjob&lt;/a&gt; &amp;#183; 70 &amp;#x2606;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/wingify/agentredrabbit&quot;&gt;wingify/agentredrabbit&lt;/a&gt; &amp;#183; 49 &amp;#x2606;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/wingify/lua-resty-rabbitmqstomp&quot;&gt;wingify/lua-resty-rabbitmqstomp&lt;/a&gt; &amp;#183; 45 &amp;#x2606;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/hackerearth/hackerearth.vim&quot;&gt;hackerearth/hackerearth.vim&lt;/a&gt; &amp;#183; 28 &amp;#x2606;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can see Wingify, Flipkart and HasGeek are ruling the leader-board here.&lt;/p&gt;

&lt;h3&gt;2.3. Relative Repository Attributes&lt;/h3&gt;

&lt;p&gt;GitHub provides a feature named &lt;em&gt;fork&lt;/em&gt;, using that you can contribute to awesome projects of others like it was your own project.&lt;/p&gt;

&lt;p&gt;This section deals with attributes of repositories, counting which one of them is a &lt;em&gt;forked&lt;/em&gt; repository or which one is a &lt;em&gt;source&lt;/em&gt; repository.
&lt;img src=&quot;//pravj.github.io/assets/ospi/repository-attributes.png&quot; alt=&quot;Repository-Attributes&quot;&gt;&lt;/p&gt;

&lt;p&gt;This plot shows which organization have all their own &lt;em&gt;source&lt;/em&gt; repositories and which one is having &lt;em&gt;forked&lt;/em&gt; repositories.&lt;/p&gt;

&lt;p&gt;During the development, I also calculated &lt;em&gt;active&lt;/em&gt; and &lt;em&gt;inactive&lt;/em&gt; percentage of the &lt;em&gt;forked&lt;/em&gt; repositories. You can have a look &lt;a href=&quot;https://github.com/pravj/ospi/blob/master/Terms-and-conditions.md#section-7&quot;&gt;here&lt;/a&gt; at &lt;em&gt;how this was calculated&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;We can see that HasGeek is doing fairly good here, having more share of &lt;em&gt;source&lt;/em&gt; repositories than &lt;em&gt;forked&lt;/em&gt;. A large portion of Flipkart and Freshdesk&amp;#39;s repositories are &lt;em&gt;inactive-forked&lt;/em&gt;.&lt;/p&gt;

&lt;h2&gt;3. Development Activity&lt;/h2&gt;

&lt;p&gt;All the involved organizations have somewhat for the community; projects born as solutions of some problems, projects born in some hackathons and so on. They&amp;#39;re gradually building things to enhance their infrastucture and market position.&lt;/p&gt;

&lt;h3&gt;3.1. Repository Creation&lt;/h3&gt;

&lt;p&gt;This section deals with creation of repositories of all the organizations.
&lt;img src=&quot;//pravj.github.io/assets/ospi/repository-creation.png&quot; alt=&quot;Repository-Creation&quot;&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can see that Urban Ladder, HasGeek and Exotel created their first repository almost at the same time of their GitHub organization creation.&lt;/li&gt;
&lt;li&gt;ShepHertz, HasGeek and Flipkart have kinda continuous repository creation events through out the timeline.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Again, if you think that it&amp;#39;s &lt;em&gt;general knowledge&lt;/em&gt;, then let me show you the &lt;em&gt;magic&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Go back and watch the image carefully and you&amp;#39;ll notice something weird for HackerEarth, are you?&lt;/p&gt;

&lt;p&gt;Yes! you see there, HackerEarth&amp;#39;s first repository was created before creation of their GitHub organization itself. &lt;em&gt;How is this even possible?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Well! ladies and gentlemen, this is possible. Let me introduce a new theory in support of this.&lt;/p&gt;

&lt;p&gt;HackerEarth&amp;#39;s oldest repository in the time series is &lt;a href=&quot;https://github.com/hackerearth/django-storages&quot;&gt;django-storages&lt;/a&gt;. It&amp;#39;s the same repository, which is creating the confusion. But the fact is that this repository was initially &lt;em&gt;forked&lt;/em&gt; by HackerEarth&amp;#39;s Co-founder &lt;em&gt;Vivek&lt;/em&gt; on his GitHub &lt;a href=&quot;https://github.com/vivekp&quot;&gt;account&lt;/a&gt;. After the creation of a separate organization for HackerEarth, he merged that repository to the organization.&lt;/p&gt;

&lt;p&gt;That&amp;#39;s why this repository&amp;#39;s creation date is before creation of their organization. Well! again, I need &lt;a href=&quot;https://github.com/vivekp&quot;&gt;Vivek&lt;/a&gt;&amp;#39;s approval on this.&lt;/p&gt;

&lt;h3&gt;3.2. Commit Activity&lt;/h3&gt;

&lt;p&gt;This section deals with the commit activity of all the organizations.
&lt;img src=&quot;//pravj.github.io/assets/ospi/commit-activity-zoom.png&quot; alt=&quot;Commit-Activity&quot;&gt;&lt;/p&gt;

&lt;p&gt;This plot shows weekly commit activity of all the organizations. This is pretty much mixed-up though, but this was the only plot-type in my mind at the time, when I was developing this.&lt;/p&gt;

&lt;p&gt;You can see a relatively more development activity in the start of the year.&lt;/p&gt;

&lt;p&gt;Flipkart development team &lt;a href=&quot;https://github.com/Flipkart/linux&quot;&gt;keeps&lt;/a&gt; a &lt;em&gt;fork&lt;/em&gt; of the &lt;em&gt;linux&lt;/em&gt;, it&amp;#39;s not a &lt;em&gt;forked repo&lt;/em&gt; though. I removed its activities because this was making the plot even more cluttered. You can check &lt;a href=&quot;//pravj.github.io/assets/ospi/commit-activity.png&quot;&gt;that plot&lt;/a&gt; also, though.&lt;/p&gt;

&lt;h2&gt;4. Technology Stack&lt;/h2&gt;

&lt;p&gt;Different organization are working in different fields of the technology; be it medical services, developer events, online shopping, food, cloud services, online payments etc., so they&amp;#39;re encountering different problems in the path and managing it accordingly.&lt;/p&gt;

&lt;h3&gt;4.1. Programming Languages in Production&lt;/h3&gt;

&lt;p&gt;This section deals with use of different programming languages in the involved organizations&amp;#39;s infrastructure.
&lt;img src=&quot;//pravj.github.io/assets/ospi/language-uses.png&quot; alt=&quot;Language-Use&quot;&gt;&lt;/p&gt;

&lt;p&gt;This plot uses colors from GitHub&amp;#39;s &lt;a href=&quot;https://github.com/linguist&quot;&gt;linguist&lt;/a&gt; for different programming languages.&lt;/p&gt;

&lt;p&gt;This helps us understanding tech-stack of all the organizations.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Flipkart uses Java, HasGeek uses Python, Practo uses PHP and Freshdesk uses Ruby as their major programming language.&lt;/li&gt;
&lt;li&gt;Organizations have started using &lt;em&gt;non-traditional&lt;/em&gt; languages like Lua, Erlang and Scala etc.&lt;/li&gt;
&lt;li&gt;ShepHertz uses maximum no. of programming languages(14), in their quest to serve all &lt;em&gt;in-demand&lt;/em&gt; programming language in their service.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;4.2. Field of work&lt;/h3&gt;

&lt;p&gt;This section deals with the fields, different organization are working in.&lt;/p&gt;

&lt;p&gt;To calculate the results, I have used &lt;em&gt;repository names&lt;/em&gt; and &lt;em&gt;their description&lt;/em&gt; here.
Actually I wanted to have relative sharing in fields of working of all the organizations.&lt;/p&gt;

&lt;p&gt;So, initially, my plan was to use &lt;a href=&quot;http://en.wikipedia.org/wiki/Latent_Dirichlet_allocation&quot;&gt;Latent Dirichlet Allocation&lt;/a&gt; on the &lt;em&gt;repository-description-text&lt;/em&gt; corpus for &lt;em&gt;Topic Modeling&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Where I had use &lt;em&gt;concatenated repository descriptions&lt;/em&gt; of organizations as a &lt;em&gt;document&lt;/em&gt; but then I droped this idea because of asymmetrical repository distribution. It was resulting in a corpus of 14 documents only (Zomato excluded).&lt;/p&gt;

&lt;p&gt;You can have a brief knowledge about LDA, &lt;a href=&quot;http://blog.echen.me/2011/08/22/introduction-to-latent-dirichlet-allocation/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Then I changed the plan and moved towards &lt;em&gt;Naive Bayes Classifier&lt;/em&gt; and used word frequencies only.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can check the &lt;a href=&quot;https://github.com/pravj/ospi/tree/master/classifier&quot;&gt;classifier&lt;/a&gt; topic results based on probability or frequency, &lt;a href=&quot;https://github.com/pravj/ospi/blob/master/results/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, some of the topic results from Classifier for organizations are :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cucumbertown : &lt;em&gt;Django, Gearman, Email, Commit, Notifier&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Exotel : &lt;em&gt;Audio, IVR, Music, SMS&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Flipkart : &lt;em&gt;REST API&amp;#39;s, MySQL, lucence, Redis, HTTP proxy, load balancer&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Freshdesk : &lt;em&gt;Databases, Rails, API, Websockets, Socket.io, YUI, Resque&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;HasGeek : &lt;em&gt;Workshop, Lastuser, App management, TV, Job, GitHub&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;HackerEarth : &lt;em&gt;Django, API documentation and clients, extensions and editors&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Instamojo : &lt;em&gt;API clients, Wordpress, Frameworks, Huxley&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Myntra : &lt;em&gt;iOS, Cocoa, Android, ElasticSearch, Docker, Librato&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;MySmartPrice : &lt;em&gt;Technology Blog, Gearman workers, Cookbook&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Practo : &lt;em&gt;OpenID, Flask, Sentry, Symfony, Raven, Mail clients, Messages&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;ShepHertz : &lt;em&gt;App42, PaaS, SDK, API clients, MongoDB, MySQL, Redis&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;WebEngage : &lt;em&gt;Message, API, Website, Speech&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Wingify : &lt;em&gt;Angular.js, DOM, RabbitMQ, iOS, Data, Bootstrap, VWO&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here we can see that Flipkart&amp;#39;s stack includes things related to distributed computing, Networking, Databases on the other hand Wingify&amp;#39;s stack includes things related to Frontend, Data, Networking.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;So, this is it. Open Source Presence Infographic of Indian Startups. :octocat:.&lt;/p&gt;

&lt;p&gt;If you&amp;#39;re thinking that &lt;em&gt;santa&lt;/em&gt; helped me in all this; then you are wrong, my friend.
I was all alone everytime, thinking about it, collecting the data, managing R source files in Rstudio, writing Python for it and all that.&lt;/p&gt;

&lt;p&gt;If you&amp;#39;re feeling that you can do &lt;em&gt;something&lt;/em&gt; much more awesome than this.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can do whatever you want; It&amp;#39;s hosted on GitHub, &lt;a href=&quot;https://github.com/pravj/ospi&quot;&gt;pravj/ospi&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;blockquote&gt;
&lt;p&gt;Open Source Presence Infograohic : &lt;a href=&quot;https://github.com/pravj/ospi/blob/master/Terms-and-conditions.md&quot;&gt;Terms and Conditions&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
 </entry>
 
 <entry>
   <title>The git-game Write-up</title>
   <link href="//pravj.github.io/blog/the-git-game-write-up/"/>
   <updated>2015-01-15T00:00:00+05:30</updated>
   <id>//pravj.github.io/blog/the-git-game-writeup</id>
   <content type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Spoiler Alert&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You should go first and check this out, &lt;a href=&quot;https://github.com/hgarc014/git-game&quot;&gt;git-game&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s a nice little &lt;em&gt;complete-a-task-and-upgrade-level&lt;/em&gt; type of game layered on top of Git.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;It is a terminal game designed to test your knowledge of git commands. Each level in the game is a task to perform on this repo. Once you perform that task, you will be given your next task. There are a total of ten levels, each one harder than last!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I saw the reference to this game floating around in my GitHub feed yesterday. The concept is awesome as there are already &lt;a href=&quot;http://pcottle.github.io/learnGitBranching/&quot;&gt;many&lt;/a&gt; online tutorial courses on the Internet that uses interactive &lt;em&gt;learning-with-doing&lt;/em&gt; methods for Git.&lt;/p&gt;

&lt;p&gt;According to the repository, I started the adventure with cloning the repository using &lt;code&gt;git clone git@github.com:hgarc014/git-game.git&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;default branch&lt;/em&gt; was &lt;em&gt;master&lt;/em&gt; and there were only two files in repository&amp;#39;s &lt;em&gt;working directory&lt;/em&gt;, README.md and LICENSE.&lt;/p&gt;

&lt;p&gt;I started with the README.md file and &lt;code&gt;cat README.md&lt;/code&gt; revealed all its content.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;You should always check the README.md file for your next clue!

Your first task is to checkout the commit whose commit message is the answer to this question:

When a programmer is born, what is the first thing he/she learns to say?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Well! a programmer is also a boy/girl, so first thing they do is &lt;em&gt;cry&lt;/em&gt; but in the current context that thing will be &lt;em&gt;Hello, World!&lt;/em&gt; :grinning:&lt;/p&gt;

&lt;p&gt;Now I had to find the commit whose commit message was &lt;em&gt;Hello World&lt;/em&gt;, so the command &lt;code&gt;git log --graph --online&lt;/code&gt; resulted this commit history.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;* 25bfa08 added information for people that don&amp;#39;t know git
*   27e9786 Merge pull request #6 from riqpe/master
|\  
| * 3893960 Corrected description of difficulty progression
|/  
* bc9641f updated README
* 9b9380b Hello World!
* 8cafb7c Initial commit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Can you see the &lt;em&gt;Hello World! commit&lt;/em&gt; now? Yeah! we can represent it by HEAD~3.
As that commit is &lt;em&gt;directly at level 3&lt;/em&gt; or we can say &lt;em&gt;great-grandparent&lt;/em&gt; of the HEAD commit.&lt;/p&gt;

&lt;p&gt;So all I needed to do was the command &lt;code&gt;git checkout HEAD~3&lt;/code&gt;, doing so we&amp;#39;re now done with the first task.&lt;/p&gt;

&lt;p&gt;After completing the first task when the HEAD is at that particular commit, the README.md file was ready with its new task.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git-game
========

Hello World!

It looks like you have some knowledge about traversing commits!
Well, let&amp;#39;s get this party started!

We want to get to a branch whose name is the answer to this riddle: 
I am a creature that is smaller than man, but many times more in number. 
In code, my appearance can be subtle and no matter where I am found, I am unwanted. 

What am I?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Easy Peasy? Yeah, the answer is &lt;em&gt;bug&lt;/em&gt; obviously, so lets fly to same &lt;em&gt;branch&lt;/em&gt; using the &lt;code&gt;git checkout bug&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;In this &lt;em&gt;branch&lt;/em&gt;&amp;#39;s &lt;em&gt;working directory&lt;/em&gt; there were two extra files, &lt;em&gt;cool.cpp&lt;/em&gt; and &lt;em&gt;remember&lt;/em&gt; and the README.md was saying that :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git-game
========

Congratulations, it looks like you found the &amp;quot;bug.&amp;quot;
When you work with other programmers on the same project, bugs are bound to appear.
One way to create bugs is by changing code that you did not write without understanding what the code is doing.

Sometimes we like to blame others for introducing bugs in our code. 
Think you can find out who introduced a bug into our file cool.cpp? 
We think he had something to do with the development of git.
And from what we hear he also made a branch under his name.
Checkout to that branch after you find out who the culprit is.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It says that there is a bug in the file &lt;em&gt;cool.cpp&lt;/em&gt;, lets see.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;#include &amp;lt;iostream&amp;gt;

using namespace std;

int main()
{
   string mesg = &amp;quot;Hello! Who are you?&amp;quot;;
   string input;
   cout &amp;lt;&amp;lt; mesg &amp;lt;&amp;lt; endl;
   cin &amp;gt;&amp;gt; input;
   cout &amp;lt;&amp;lt; &amp;quot;Loops are fun!&amp;quot; &amp;lt;&amp;lt; endl;
   while(1);
   string reply = &amp;quot;Well, &amp;quot; + input + &amp;quot;, we hope you are having fun with our git-game!&amp;quot;;
   cout &amp;lt;&amp;lt; reply &amp;lt;&amp;lt; endl; 
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yeah! there is one; the &lt;em&gt;while loop&lt;/em&gt; will refuse the program from terminating.&lt;/p&gt;

&lt;p&gt;So, who did this? Well! that&amp;#39;s what we have to answer now.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;git blame - Helps you finding who committed what.&lt;/p&gt;

&lt;p&gt;Show what revision and author last modified each line of a file&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;git blame cool.cpp&lt;/code&gt; is here for our rescue. It says that :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;ce59bbfd (Henry Garcia      2014-12-08 18:22:35 -0800 10)    cin &amp;gt;&amp;gt; input;
3922a6d8 (LinusTorvalds2014 2014-12-09 12:37:10 -0800 11)    cout &amp;lt;&amp;lt; &amp;quot;Loops are fun!&amp;quot; &amp;lt;&amp;lt; endl;
3922a6d8 (LinusTorvalds2014 2014-12-09 12:37:10 -0800 12)    while(1);
ce59bbfd (Henry Garcia      2014-12-08 18:22:35 -0800 13)    string reply = &amp;quot;Well, &amp;quot; + input + &amp;quot;, ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Damn! someone with a similar name to the great &lt;em&gt;Linus Torvalds&lt;/em&gt; is the culprit, he wrote that buggy line in the file. OK, lets move to his &lt;em&gt;branch&lt;/em&gt; as the README says, using &lt;code&gt;git checkout LinusTorvalds2014&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;This time the README.md file was not explicitly directing anywhere.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git-game
========

Looks like you found the branch of the evil Mastermind.
Things may start to get a little more challenging...

The next clue you are looking for --
   is in a file you choose to ignore!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When I was doing this I thought may be it&amp;#39;s pointing to that useless file named &lt;em&gt;remember&lt;/em&gt; which was back there in the branch &lt;em&gt;bug&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;So I &lt;em&gt;checked-out&lt;/em&gt; again to the branch &lt;em&gt;bug&lt;/em&gt; and tried to find any clue in the file &lt;em&gt;remember&lt;/em&gt;. Its content looked like RSA Public keys to me.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;cweJIY8GOo18Usi5ykA4nmhBR0h 6mMpyy4nFY71IhgjGGr0rkY3uE tVTo j5XlwgLZZ PpRK Pwbnd7Z4bpQWc6sU700xfLTI63FbD DsKCQbUKG KS02qfurxMJ3mHHD8f6VhFUmY2rPD NjznQ8mnQvlNwAR1QsLDK Zjl1kGbWQBeGoOBwVMfa790ATCNg fR OLPA0hi7OW N4jUN26mBIwQVhVtteDSDSr OVfhvUwb7ydODX7R2no xxTmrD5IFUXIB8dDhR lpSFaRcbF2up wrWA J2acmA28c2 NhE Bqj7ntV67GTHpVBSwO
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I gave up after scrolling through the lengthy &lt;em&gt;remember&lt;/em&gt; file and &lt;em&gt;checked-out&lt;/em&gt; again to the branch &lt;em&gt;LinusTorvalds2014&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;I have a strange habit to use &lt;code&gt;ls -a&lt;/code&gt; instead of &lt;code&gt;ls&lt;/code&gt; to list content of a directory so I did it and Boy! there it was, hiding all this time.&lt;/p&gt;

&lt;p&gt;Guess what? there was a file named &lt;em&gt;.gitignore&lt;/em&gt; and it said :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;# welcome to the ignore file!!

# This file is hidden by default, 
# but did you know you have some branches that aren&amp;#39;t shown to you,
# when you check the list of branches?
#
# For your next clue...
# Which abstract data type tends to implement sets and maps?? 
# The answer is the same answer to this riddle:
#
#   I am both mother and father.
#   I am seldom still
#   yet I never wander.
#   I never birth nor nurse.
#   
#   What am I?
#
# Afterwards... well, you
# know, checkout to the answer. 

*.rem
a.out
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This time the answer of riddle is &lt;em&gt;Tree&lt;/em&gt;, simple. Don&amp;#39;t you know? You can &lt;em&gt;google&lt;/em&gt; it any time, I did the same. :wink:&lt;/p&gt;

&lt;p&gt;So the next thing to do was, &lt;code&gt;git checkout tree&lt;/code&gt; and the README.md file there said :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git-game
========

Welcome to the &amp;quot;tree&amp;quot; branch. 
Looks like good ol&amp;#39; Linus modified the &amp;quot;nextclue_input.cpp&amp;quot; file. 
Normally, when ran with the shell script &amp;quot;outputclue.sh&amp;quot;, the &amp;quot;nextclue_input.cpp&amp;quot; file would give us the next hint.

Maybe, you should try running the shell script with the &amp;quot;nextclue_input.cpp&amp;quot; file and see what happens...

You can run the script by running the command &amp;quot;./outputclue.sh FILE&amp;quot; .
If you are on Windows, it&amp;#39;s okey to use `git-bash` that is installed with [msysgit](https://msysgit.github.io/).
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On executing the shell script with the &lt;em&gt;nextclue_input.cpp&lt;/em&gt;, printed something on the STDOUT.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Linus has been here...
I love messing with these amateur programmers!!
If you want some real fun, then you should try resolving a conflict between this branch (tree) and code4life.
I introduced a little bug that you should fix in the conflict. &amp;gt;:)
After you merge these 2 files you should run the shell script again!!

Good Luck!!!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The file &lt;em&gt;outputclue.sh&lt;/em&gt; is a &lt;em&gt;bash&lt;/em&gt; source file and matches the &lt;em&gt;md5sum&lt;/em&gt; of each word in the &lt;em&gt;nextclue_input.cpp&lt;/em&gt; to a local &lt;em&gt;checksum&lt;/em&gt; variable named &lt;em&gt;bug&lt;/em&gt;.
It keeps asking to fix &lt;em&gt;merge conflicts&lt;/em&gt; until the word matching that checksum is present in the file.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;#!/bin/bash
if [ -z $1 ]; then 
  echo &amp;quot;well, someone didn&amp;#39;t want to run the script with a file...&amp;quot;;
  exit;
fi

file=$1
bug=7c85d987a917c2a555d1391426978f05
mesg=&amp;quot;Linus has been here...\nI love messing with these amateur programmers!!\nIf you want some real fun, then you should try resolving a conflict between this branch (tree) and code4life.\nI introduced a little bug that you should fix in the conflict. &amp;gt;:)\nAfter you merge these 2 files you should run the shell script again!!\n\nGood Luck!!!&amp;quot;
merges=$(git log --format=%h --merges | head -1)
csum=&amp;quot;md5sum&amp;quot;
if [ $(echo &amp;quot;$OSTYPE&amp;quot; | grep darwin) ];then
    csum=&amp;quot;md5&amp;quot;
fi

if [ &amp;quot;$file&amp;quot; = &amp;quot;nextclue_input.cpp&amp;quot; ];then 
  if [ ${merges} ]; then 
    while read p; do 
      for w in $p;do 
        if [ `echo $w | $csum | awk &amp;#39;{print $1}&amp;#39;` = $bug ];then 
          echo -e $mesg; 
          exit; 
        fi; 
      done;
    done &amp;lt; $file ;
    echo -e &amp;quot;Well, congratulations!! You fixed my conflict!!\nIf you would like to continue, then you should checkout to the $(echo 90mP8ouQHsNe | tr -d &amp;#39;0-9A-Z&amp;#39;) branch!!\n&amp;quot; ;
   else 
     echo -e $mesg; 
     exit;
   fi; 
else 
  echo &amp;quot;Looks like you passed in the wrong file&amp;quot;;
fi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I saw that the &lt;em&gt;nextclue_input.cpp&lt;/em&gt; file was having a line with an &lt;em&gt;infinite while loop&lt;/em&gt; and my guess was right, the &lt;em&gt;checksum&lt;/em&gt; variable matched the &lt;em&gt;md5sum&lt;/em&gt; of the term &lt;em&gt;while(1);&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So to fix the &lt;em&gt;merge conflict&lt;/em&gt;, I did &lt;code&gt;git merge code4life&lt;/code&gt; and removed the faulty line; It worked like a charm.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Well, congratulations!! You fixed my conflict!!
If you would like to continue, then you should checkout to the mouse branch!!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;BTW! It was way more easy. As the answer branch was, mouse.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ echo 90mP8ouQHsNe | tr -d &amp;#39;0-9A-Z&amp;#39;&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When I &lt;em&gt;checked-out&lt;/em&gt; to the branch &lt;em&gt;mouse&lt;/em&gt;, it said :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;nextclue_input.cpp: needs merge
error: you need to resolve your current index first
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But you can get away without merging by &lt;em&gt;stashing the changes&lt;/em&gt;, I did this with &lt;code&gt;git add nextclue_input.cpp &amp;amp;&amp;amp; git stash&lt;/code&gt;.
Now the README.md file in branch &lt;em&gt;mouse&lt;/em&gt; said :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git-game
========

Looks like you resolved your conflict and found our branch, congrats!! 

Hmm...it seems this branch has a file that was seen before in another branch. 
Do you &amp;quot;remember&amp;quot; what it is?
I think this file has something to do with the next clue, but it seems to be very ugly looking. 
Maybe if we compare the &amp;quot;diff&amp;quot;erences between this file and the file from before we&amp;#39;ll know where to go next...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yeah! I do remember that the file &lt;em&gt;remember&lt;/em&gt; was there in the branch &lt;em&gt;bug&lt;/em&gt; as I wasted 10 minutes on it.&lt;/p&gt;

&lt;p&gt;I did &lt;code&gt;git diff mouse bug -- remember&lt;/code&gt; to see the difference between these two files accross branches and the difference in the files was this one line :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;-Sn The next clue is: YtrydjKsYqebDoI3h bTINUeV6 pTVY8jnK2re HRwwNy25Ps6 u0YChCo5Jtw N3xkH3G nx aGo6yQTW RVZMsf3xk tBL0sG9GAR HQbyGYdqs i6dx1fyIPGJVci
+Sn In a branch named: Henry YtrydjKsYqebDoI3h bTINUeV6 pTVY8jnK2re HRwwNy25Ps6 u0YChCo5Jtw N3xkH3G nx aGo6yQTW RVZMsf3xk tBL0sG9GAR HQbyGYdqs i6dx1fy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, the next &lt;em&gt;branch&lt;/em&gt; to move was &lt;em&gt;Henry&lt;/em&gt;, but &lt;code&gt;git checkout Henry&lt;/code&gt; was a trap.&lt;/p&gt;

&lt;p&gt;On &lt;em&gt;checking-out&lt;/em&gt; it said, &lt;em&gt;You are in &amp;#39;detached HEAD&amp;#39; state&lt;/em&gt;; means we were not in a &lt;em&gt;branch&lt;/em&gt; but &lt;em&gt;tag&lt;/em&gt;. The README.md file was saying the same.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git-game
========

Welcome to my Tag!!! 

If you&amp;#39;re looking for my branch then you have gone the wrong way!!

How do you checkout to a branch that has the same name as a tag??? 
Deal with the tag first!!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The problem was that there was a &lt;em&gt;branch&lt;/em&gt; with exactly same name as a tag, &lt;em&gt;Henry&lt;/em&gt;.
So I &lt;em&gt;renamed&lt;/em&gt; the &lt;em&gt;tag&lt;/em&gt;, because &lt;em&gt;who knows when you&amp;#39;re gonna need something?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git tag Henry-v0.1 Henry &amp;amp;&amp;amp; git tag -d Henry&lt;/code&gt; made a new tag pointing to old&amp;#39;s commit and deleted the old one.&lt;/p&gt;

&lt;p&gt;Now after &lt;em&gt;checking-out&lt;/em&gt; to the branch &lt;em&gt;Henry&lt;/em&gt;, the README said :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git-game
========

Welcome!! It looks like you made it to my Branch!!!
Generally you want to refrain from making tags the same name as branches, unless you have a good reason.
The tag is more like the stable release.
While the branch is more like the in progress feature, which will be added soon.

You&amp;#39;re almost done!! Excited?? Hope you are! You have one more thing to do!

Now its time to update the master branch, updating is really useful when you fork a repository and your forked repo starts to get behind on commits. The repository to update from is: https://github.com/drami025/git-game.git

Don&amp;#39;t cheat!!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, according to the task, to update the &lt;em&gt;master branch&lt;/em&gt; I &lt;em&gt;checked-out&lt;/em&gt; to it.&lt;/p&gt;

&lt;p&gt;With &lt;code&gt;git remote add updater git@github.com:drami025/git-game.git&lt;/code&gt; command, I added the new &lt;em&gt;remote&lt;/em&gt; to update from, as the README.md said.&lt;/p&gt;

&lt;p&gt;Then a simple &lt;code&gt;git pull updater master&lt;/code&gt; did rest of the work and the &lt;em&gt;master branch&lt;/em&gt; was equal with the new &lt;em&gt;remote&lt;/em&gt;, all updated. \o/.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Git Game Finish Line
==========

If you did not fork this repository from the terminal, then we are disappointed in you!!
=======

However, if you did, then great Job!!
You completed our Git Game!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;They have also implemented an &lt;a href=&quot;http://openbadges.org/&quot;&gt;Open-Badge&lt;/a&gt; for this, I got one.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Finally, it&amp;#39;s complete. And this Write-up too.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m feeling pain in my fingers now.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;h4&gt;Behind the scene :&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Each level was somewhat harder than the previous one but overall it wasn&amp;#39;t.&lt;/li&gt;
&lt;li&gt;Yeah! I completed all tasks &lt;em&gt;twice&lt;/em&gt;, the extra one while writing this Write-up.&lt;/li&gt;
&lt;li&gt;It took me almost 30 minutes to complete all tasks but 2 hours to write this.&lt;/li&gt;
&lt;li&gt;Today, it&amp;#39;s an awesome sunny, winter day here. :sunny:&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Post-mortem of an Internet Accident</title>
   <link href="//pravj.github.io/blog/post-mortem-of-an-internet-accident/"/>
   <updated>2015-01-11T00:00:00+05:30</updated>
   <id>//pravj.github.io/blog/post-mortem-of-an-internet-accident</id>
   <content type="html">&lt;p&gt;Hi scout, thanks for visiting this edge node of the Holy Internet; Before the combination &lt;em&gt;Internet Accident&lt;/em&gt; confuse you, let me decode its meaning in the context of this post.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Encounter with something on an edge node of the Holy Internet.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So this post is all about my attempt to solve a question, I saw on &lt;em&gt;Quora&lt;/em&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://www.quora.com/What-good-known-project-on-GitHub-uses-the-largest-number-of-programming-languages&quot;&gt;What good known projects on GitHub uses the largest number of programming languages?&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And I think that my answer is 98.76% correct, respecting the &lt;em&gt;No-Zero-Redundancy&lt;/em&gt; law.&lt;/p&gt;

&lt;p&gt;I saw this question while jumping between my chrome tabs when I was struggling with old drafts of my blog.
I clicked the link to give it a separate tab; &lt;em&gt;even questions have self respect&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;I stumbled upon it as I saw that the question had a topic named &lt;em&gt;GitHub&lt;/em&gt; also.&lt;/p&gt;

&lt;p&gt;So, to answer this, all I had to do was to find a repository which uses highest number of programming languages in it.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Wait, the question also says a &lt;em&gt;&amp;quot;good known project&amp;quot;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Now that&amp;#39;s a plot twist.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;GitHub&lt;/em&gt; provides an excellent &lt;a href=&quot;https://developer.github.com/v3/&quot;&gt;REST API&lt;/a&gt;, so excellent that it powers some awesome services also, like the &lt;a href=&quot;https://gitter.im&quot;&gt;Gitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now, to look for languages statistics of a repository you need the names of the repository and its owner. Then you can check a repo&amp;#39;s languages statistics using,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;https://api.github.com/repos/{owner}/{repo}/languages&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;As far as a I know, there is not any way to do a reverse lookup, where you just provide number of programming languages and it gives you all the associated repositories.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So I thought, lets give up on it and enjoy the coffee, &lt;em&gt;I had one on my desk&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;I closed the question tab and started enjoying the coffee but then I opened it again because I felt that there may be a chance, if I use the &lt;em&gt;GitHub Archive&lt;/em&gt; project.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;GitHub Archive is a project to record the public GitHub timeline, archive it, and make it easily accessible for further analysis.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This shift in plan was also not enough as &lt;em&gt;GitHub Archive&lt;/em&gt; gives only the major programming language for a project.
Now it was the time to shift to coffee &lt;em&gt;full time&lt;/em&gt; but &lt;em&gt;Nope! I had another idea&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The idea was to collect &lt;em&gt;good and known&lt;/em&gt; projects of &lt;em&gt;GitHub&lt;/em&gt; and rank them according to no. of programming languages in them. This sounds like &lt;em&gt;Brute Force&lt;/em&gt; but it was the only way left.&lt;/p&gt;

&lt;p&gt;I headed towards the &lt;em&gt;GitHub API&lt;/em&gt; for it but found that they gives you the first 1000 search results only.&lt;/p&gt;

&lt;p&gt;So I moved to &lt;em&gt;GitHub Archive&lt;/em&gt; finally and &lt;a href=&quot;https://github.com/pravj/Post-mortem/blob/master/bigquery.sql&quot;&gt;downloaded a .csv file&lt;/a&gt; of all the repositories with greater than equal to 500 stars. Now, I think it covers most of your &lt;em&gt;good and known projects&lt;/em&gt;, happy now?&lt;/p&gt;

&lt;p&gt;I &lt;em&gt;Vimed&lt;/em&gt; the .csv file and found that some URLs were missing the owner&amp;#39;s name.
&lt;img src=&quot;//pravj.github.io/assets/post-mortem-of-an-internet-accident/vim-screenshot.png&quot; alt=&quot;Vim-Screenshot&quot;&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;:g/https:\/\/github.com\/\//d&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I removed all the corrupted lines using this command.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you&amp;#39;re thinking that by removing lines, we won&amp;#39;t consider these repositories then take a deep breath and don&amp;#39;t think so, we will consider them, keep reading.&lt;/p&gt;

&lt;p&gt;Then I wrote a &lt;em&gt;Python module&lt;/em&gt; to interact with the &lt;em&gt;GitHub API&lt;/em&gt;, named it &lt;em&gt;&lt;a href=&quot;https://github.com/pravj/Post-mortem/blob/master/postman.py&quot;&gt;postman&lt;/a&gt;&lt;/em&gt;.
The &lt;em&gt;postman&lt;/em&gt; uses &lt;em&gt;Authentication Token&lt;/em&gt; from &lt;em&gt;GitHub&lt;/em&gt; to prevent the &lt;em&gt;rate-limiting&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;I don&amp;#39;t know how much did &lt;em&gt;postman&lt;/em&gt; take in its task as I was attending my classes then.
But when I came back from class in the evening, I saw that &lt;em&gt;postman&lt;/em&gt; was done with the task. &lt;em&gt;Wow, an obedient postman&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Right now if you search in GitHub for repositories having 500 or more stars, you will see around 7,200 results. So we have been doing this right so far as GitHub Archive &lt;a href=&quot;http://git.io/78eKDg&quot;&gt;don&amp;#39;t have&lt;/a&gt; all the data&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Once all the data is available, it&amp;#39;s time to &lt;em&gt;rock &amp;#39;n&amp;#39; roll&lt;/em&gt;. &lt;a href=&quot;http://www.rstudio.com&quot;&gt;Rstudio&lt;/a&gt; is always there to help us.&lt;/p&gt;

&lt;p&gt;Plotting the stars and languages distribution over all the repositories, we get this graph.
&lt;img src=&quot;//pravj.github.io/assets/post-mortem-of-an-internet-accident/stars-and-languages.png&quot; alt=&quot;Stars-and-Language-distribution&quot;&gt;
You can see that most of our good and known projects are in the bottom-left corner. Almost 90% of our repositories have less than 20,000 stars and 20 languages.&lt;/p&gt;

&lt;p&gt;There is only one repository with more than 40,000 stars, which is the &lt;a href=&quot;https://github.com/twbs/bootstrap&quot;&gt;twbs/bootstrap&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;OK, let&amp;#39;s come to the question again. I think ordering repositories according to their no. of programming languages will work.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Top 25 projects by their no. of programming languages&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/leachim6/hello-world&quot;&gt;leachim6/hello-world&lt;/a&gt;, languages : 82&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ajaxorg/ace&quot;&gt;ajaxorg/ace&lt;/a&gt;, languages : 58&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ajaxorg/ace-builds&quot;&gt;ajaxorg/ace-builds&lt;/a&gt;, languages : 58&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/freebsd/freebsd&quot;&gt;RMerl/asuswrt-merlin&lt;/a&gt;, languages : 57&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/freebsd/freebsd&quot;&gt;freebsd/freebsd&lt;/a&gt;, languages : 39&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/geany/geany&quot;&gt;geany/geany&lt;/a&gt;, languages : 36&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/xbmc/xbmc&quot;&gt;xbmc/xbmc&lt;/a&gt;, languages : 30&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/dspinellis/unix-history-repo&quot;&gt;dspinellis/unix-history-repo&lt;/a&gt;, languages : 30&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/TechEmpower/FrameworkBenchmarks&quot;&gt;TechEmpower/FrameworkBenchmarks&lt;/a&gt;, languages : 28&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/imatix/zguide&quot;&gt;imatix/zguide&lt;/a&gt;, languages : 28&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/apache/thrift&quot;&gt;apache/thrift&lt;/a&gt;, languages : 27&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/msysgit/msysgit&quot;&gt;msysgit/msysgit&lt;/a&gt;, languages : 27&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/kennyledet/Algorithm-Implementations&quot;&gt;kennyledet/Algorithm-Implementations&lt;/a&gt;, languages : 27&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/flycheck/flycheck&quot;&gt;flycheck/flycheck&lt;/a&gt;, languages : 27&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/aichallenge/aichallenge&quot;&gt;aichallenge/aichallenge&lt;/a&gt;, languages : 27&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/triAGENS/ArangoDB&quot;&gt;triAGENS/ArangoDB&lt;/a&gt;, languages : 26&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/offensive-security/exploit-database&quot;&gt;offensive-security/exploit-database&lt;/a&gt;, languages : 25&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/JuliaLang/julia&quot;&gt;JuliaLang/julia&lt;/a&gt;, languages : 23&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/JetBrains/intellij-community&quot;&gt;JetBrains/intellij-community&lt;/a&gt;, languages : 23&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/facebook/pfff&quot;&gt;facebook/pfff&lt;/a&gt;, languages : 23&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ornicar/lila&quot;&gt;ornicar/lila&lt;/a&gt;, languages : 23&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WebKit/webkit&quot;&gt;WebKit/webkit&lt;/a&gt;, languages : 22&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ariya/phantomjs&quot;&gt;ariya/phantomjs&lt;/a&gt;, languages : 21&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ruby/ruby&quot;&gt;ruby/ruby&lt;/a&gt;, languages : 21&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/coolwanglu/vim.js&quot;&gt;coolwanglu/vim.js&lt;/a&gt;, languages : 21&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;So, is that all? &lt;em&gt;Not at all! We have a lot to talk about my friend.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Lets talk about something interesting I found in the data there.&lt;/p&gt;

&lt;p&gt;&lt;/br&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;1. There were 382 repositories without any programming language.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Most of them are documentations, list of resources for a field.&lt;/li&gt;
&lt;li&gt;For example &lt;a href=&quot;https://github.com/vhf/free-programming-books&quot;&gt;vhf/free-programming-books&lt;/a&gt;, List of free learning resources.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;//pravj.github.io/assets/post-mortem-of-an-internet-accident/zero-language-repository.png&quot; alt=&quot;Zero-Language-Repositories&quot;&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;subject to detection of the language by GitHub&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Along with the required dataset, I was also collecting the &lt;a href=&quot;https://github.com/pravj/Post-mortem/blob/master/log/postman.log&quot;&gt;logs&lt;/a&gt; data.
So, there is something more interesting.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;2. The log file shows &amp;#39;ERROR : status 404&amp;#39; in some lines.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;There are 214 such lines, it means these projects have shifted their owners as it&amp;#39;s unusual to delete such popular repository.&lt;/li&gt;
&lt;li&gt;They have evolved to much larger projects and have their own organizations now. For example the projects &lt;a href=&quot;https://github.com/homebrew/homebrew&quot;&gt;Homebrew&lt;/a&gt;, &lt;a href=&quot;https://github.com/docker/docker&quot;&gt;Docker&lt;/a&gt; and &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll&lt;/a&gt;, earlier they were &lt;a href=&quot;https://github.com/mxcl/homebrew&quot;&gt;mxcl/homebrew&lt;/a&gt;, &lt;a href=&quot;https://github.com/dotcloud/docker&quot;&gt;dotcloud/docker&lt;/a&gt; and &lt;a href=&quot;https://github.com/mojombo/jekyll&quot;&gt;mojombo/jekyll&lt;/a&gt; respectively.&lt;/li&gt;
&lt;li&gt;The maximum-star-holder-and-ultra-awesome project &lt;a href=&quot;https://github.com/twbs/bootstrap&quot;&gt;twbs/bootstrap&lt;/a&gt; was earlier at &lt;em&gt;Twitter&lt;/em&gt; by the address, &lt;a href=&quot;https://github.com/twitter/bootstrap&quot;&gt;twitter/bootstrap&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The one-and-only TJ Holowaychuk have changed his username from &lt;a href=&quot;https://github.com/visionmedia&quot;&gt;visionmedia&lt;/a&gt; to &lt;a href=&quot;https://github.com/tj&quot;&gt;tj&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;3. The log file shows &amp;#39;ERROR : status 403&amp;#39; in some lines.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now this is weird, as status 403 denotes the Forbidden state. But underlying secrets are much more awesome here.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;There were two repositories, disabled due to a DMCA takedown notice.

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/popcorn-official/popcorn-app&quot;&gt;popcorn-official/popcorn-app&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Bukkit/CraftBukkit&quot;&gt;Bukkit/CraftBukkit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;There was one repositories which is disabled by GitHub staff.

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mandatoryprogrammer/Octodog_Invasion&quot;&gt;mandatoryprogrammer/Octodog_Invasion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;There was one repository which is deleted.

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/NULLPointerDz/test&quot;&gt;NULLPointerDz/test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Don&amp;#39;t know how but this repository had more than 500 stars once.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr&gt;

&lt;blockquote&gt;
&lt;p&gt;The code for this report is on GitHub, &lt;a href=&quot;https://github.com/pravj/Post-mortem&quot;&gt;pravj/Post-mortem&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you feel that you can do more after going through this post-mortem report, you are welcome to show your medical skills.&lt;/p&gt;
&lt;/blockquote&gt;
</content>
 </entry>
 
 <entry>
   <title>geo_pattern &#58; going on the Go path</title>
   <link href="//pravj.github.io/blog/going-on-the-go-path/"/>
   <updated>2014-11-01T00:00:00+05:30</updated>
   <id>//pravj.github.io/blog/going-on-the-go-path</id>
   <content type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Before I start the tell&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You should have a look at &lt;a href=&quot;https://github.com/pravj/geo_pattern.git&quot;&gt;geo_pattern&lt;/a&gt;, if you haven&amp;#39;t yet.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;What&amp;#39;s the buzz all about?&lt;/h1&gt;

&lt;p&gt;This blog post is about development of &lt;em&gt;geo_pattern&lt;/em&gt; library in &lt;em&gt;golang&lt;/em&gt;.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;What do you think about this my favorite colored &lt;em&gt;concentric circle&lt;/em&gt; pattern?
&lt;img src=&quot;//pravj.github.io/assets/going-on-the-go-path/concentric-circle.png&quot; alt=&quot;Concentric-Circle&quot;&gt;&lt;/p&gt;

&lt;h1&gt;geo_pattern. What?&lt;/h1&gt;

&lt;p&gt;Umm, actually I don&amp;#39;t know exactly why the name is &lt;em&gt;geo_pattern&lt;/em&gt; but I know what it is.&lt;/p&gt;

&lt;p&gt;It is a &lt;em&gt;golang&lt;/em&gt; library that generates pretty image patterns. It comes with awesome pattern types like nested squares, tessellation, concentric circles and &lt;a href=&quot;https://github.com/pravj/geo_pattern#available-pattern&quot;&gt;13 more&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now if you are thinking, why I don&amp;#39;t know the reason behind its naming. It&amp;#39;s because &lt;em&gt;geo_pattern&lt;/em&gt; is actually the golang port of &lt;em&gt;my friend and GitHubber&lt;/em&gt; &lt;a href=&quot;https://github.com/jasonlong&quot;&gt;Jason Long&lt;/a&gt;&amp;#39;s &lt;a href=&quot;https://github.com/jasonlong&quot;&gt;GeoPattern&lt;/a&gt; Ruby library.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Jason&lt;/em&gt; created the original Ruby library to power GitHub&amp;#39;s &lt;a href=&quot;https://guides.github.com/&quot;&gt;Guides&lt;/a&gt; and &lt;a href=&quot;https://github.com/explore&quot;&gt;Explore&lt;/a&gt; sections.&lt;/p&gt;

&lt;h1&gt;another geo_pattern. Why?&lt;/h1&gt;

&lt;p&gt;As you can see original &lt;em&gt;geo_pattern&lt;/em&gt; is being used at GitHub itself. &lt;em&gt;What else you want, huh?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So there are many other &lt;a href=&quot;https://github.com/jasonlong/geo_pattern#ports&quot;&gt;implemetations&lt;/a&gt; in different programming languages, trying to help users of each language choice.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;But this was not the real force for me to develop one more in golang.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Before the &lt;em&gt;geo_pattern&lt;/em&gt;, last thing I worked on was &lt;a href=&quot;https://github.com/pravj/Doga&quot;&gt;Doga: HTTP log monitoring console for Humans&lt;/a&gt;. I really loved developing it and still I love to just watch it working.&lt;/p&gt;

&lt;p&gt;The reason behind this special attraction is that :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It helped me landing a summer internship at &lt;a href=&quot;https://www.datadoghq.com/&quot;&gt;Datadog&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;It is written in Python. &lt;strong&gt;&amp;lt;3&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then I started writing blog for an old project &lt;a href=&quot;https://github.com/pravj/teamwork&quot;&gt;teamwork&lt;/a&gt;, just for the sake of adding an entry to my archives but it&amp;#39;s still in drafts.&lt;/p&gt;

&lt;p&gt;I tried many things to kill my time :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;watched too much movies, more than too much &lt;em&gt;Animation movies&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;tried to read one seventh of the entire internet; I just missed it, though.&lt;/li&gt;
&lt;li&gt;collected some best music and shaped it in a playlist named &lt;em&gt;confusion&lt;/em&gt; on Muzi, so was I.&lt;/li&gt;
&lt;li&gt;managed to complete reading one entire research paper, &lt;em&gt;first time \o/.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;attempted watching Coursera content for two courses.&lt;/li&gt;
&lt;li&gt;tried to work on something new but got stuck somewhere and paused the work.&lt;/li&gt;
&lt;li&gt;managed to contribute to term2048, &lt;em&gt;only one right thing.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;In short I was doing everything but there was no sign of satisfaction; &lt;em&gt;getting philosophical, lol.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That&amp;#39;s why I decided to write something. And here comes the &lt;em&gt;geo_pattern.&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;Golang. Why?&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;Please don&amp;#39;t kill me, if you use &amp;#39;go&amp;#39; more than &amp;#39;golang&amp;#39;. I&amp;#39;m just being formal.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Since this summer I was collecting talks, blogs and other sources etc. about use of different programming languages in the wild. I hope someday I&amp;#39;ll be able to convert that all in something readable.&lt;/p&gt;

&lt;p&gt;Golang was on my list ever since.&lt;/p&gt;

&lt;p&gt;I have seen many awesome products shifting their infrastructure from &lt;a href=&quot;https://www.spacemonkey.com/blog/posts/go-space-monkey&quot;&gt;Python&lt;/a&gt;, &lt;a href=&quot;http://www.quora.com/Why-did-Koding-switch-from-Node-js-to-Go&quot;&gt;Node.js&lt;/a&gt; to &lt;em&gt;golang&lt;/em&gt;. Even Dropbox &lt;a href=&quot;https://tech.dropbox.com/2014/07/open-sourcing-our-go-libraries/&quot;&gt;migrated&lt;/a&gt; part of their code stack to golang from Python. Also I have read the &lt;em&gt;TJ holowaychuk&lt;/em&gt; &lt;a href=&quot;https://medium.com/code-adventures/farewell-node-js-4ba9e7f3e52b&quot;&gt;praising&lt;/a&gt; golang.&lt;/p&gt;

&lt;p&gt;All this made me to take a walk in the &lt;em&gt;golang&lt;/em&gt; land.&lt;/p&gt;

&lt;h1&gt;Learning Golang. Developing geo_pattern.&lt;/h1&gt;

&lt;p&gt;In starting I spend two evenings reading about formal language convention stuff on the &lt;a href=&quot;http://www.golang-book.com/&quot;&gt;Golang-Book&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After playing for a while in my &lt;em&gt;~/projects/learn.go/&lt;/em&gt; directory, I started working on &lt;em&gt;geo_pattern&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;I love to read source code of every readable thing in any language except assembly, &lt;em&gt;as far as I can understand it&lt;/em&gt;. So I started reading source code of original &lt;em&gt;library&lt;/em&gt; and it was fun. The most helpful thing was Jason&amp;#39;s blog &lt;a href=&quot;https://medium.com/@jasonlong/generating-visual-designs-with-code-62e59c4881ca&quot;&gt;Generating visual designs with code&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In starting I was having problems that I even googled &lt;em&gt;go sucks&lt;/em&gt;. Because I found that &lt;em&gt;golang&lt;/em&gt; is a bit more verbose language. It doesn&amp;#39;t have some generic things so you have to write some work around like absense of optional arguments in functions and a better way to manage classes and stay object oriented.&lt;/p&gt;

&lt;p&gt;But the more I worked with it I found that I&amp;#39;m more aware about what I&amp;#39;m writing, debugging is hell lot easy and what not.&lt;/p&gt;

&lt;p&gt;Things that helped me from not giving up, are :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gobyexample.com/&quot;&gt;Go by Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jordanorelli.com/post/32665860244/how-to-use-interfaces-in-go&quot;&gt;How to use interfaces in Go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.golang.org/godoc-documenting-go-code&quot;&gt;Godoc: documenting Go code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;And the &lt;em&gt;Holy Internet&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I mailed Jason asking permission to port it and some other stuff related to licensing. His reply was positive. &lt;em&gt;That&amp;#39;s the ideal way you port something.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Then I called an astrologer for the right time to post about &lt;em&gt;geo_pattern&lt;/em&gt; on &lt;a href=&quot;https://news.ycombinator.com/item?id=8520961&quot;&gt;Hacker News&lt;/a&gt; and Holy, mother of bull!, He was perfect. It went to 2nd rank on the front page. #ThanksHN \o/.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;All this happened a bit fast. In a week or so.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;Now What?&lt;/h1&gt;

&lt;p&gt;I hated and then loved working with &lt;em&gt;golang; still loving&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;As you can see, people are using &lt;em&gt;golang&lt;/em&gt; to speed up their projects and scale them upto higher levels. So now I wish to understand more about it. I haven&amp;#39;t smoked &lt;em&gt;golang&amp;#39;s concurrency primitives - Go routines and Channels yet&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;It was awesome to see &lt;em&gt;geo_pattern&lt;/em&gt; &lt;a href=&quot;https://twitter.com/jasonlong/status/527465160253132803&quot;&gt;leading&lt;/a&gt; GitHub&amp;#39;s trending repositories.&lt;/p&gt;

&lt;p&gt;I have noticed that I&amp;#39;m not good in managing my past works like some inspiring people do in the GitHub community. It&amp;#39;s mainly because I move myself to some other stuff &lt;em&gt;totally&lt;/em&gt; and don&amp;#39;t pay much attention to older ones.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ll try to work on this and learn more things about &lt;em&gt;golang&lt;/em&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;So if you still wants to answer the question I asked in the start, you can use &lt;em&gt;Internet of things&lt;/em&gt; to catch me. \o/.&lt;/p&gt;
&lt;/blockquote&gt;
</content>
 </entry>
 
 <entry>
   <title>termping &#58; &#9829; &#43; Node.js &#43; Streams &#43; CoffeeScript</title>
   <link href="//pravj.github.io/blog/introducing-termping/"/>
   <updated>2014-07-27T00:00:00+05:30</updated>
   <id>//pravj.github.io/blog/introducing-termping</id>
   <content type="html">&lt;blockquote&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;before I start the tell
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;you should have a look on &lt;a href=&quot;https://github.com/pravj/termping.git&quot;&gt;termping&lt;/a&gt;, if you haven&amp;#39;t yet.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;What&amp;#39;s the fuss about&lt;/h1&gt;

&lt;p&gt;This Blog is all about Development of a game(kind of) &lt;a href=&quot;https://github.com/pravj/termping.git&quot;&gt;termping&lt;/a&gt;, which is a prototype of one of the oldest video game &lt;a href=&quot;https://en.wikipedia.org/wiki/Pong&quot;&gt;Pong&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;but this prototype runs in your system&amp;#39;s &lt;a href=&quot;https://en.wikipedia.org/wiki/Computer_terminal&quot;&gt;terminal&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;Emergence&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;One thing that I just feel, I am getting good at is
&lt;strong&gt;&amp;quot;reading and understanding other people&amp;#39;s code&amp;quot;&lt;/strong&gt; &lt;em&gt;&amp;#35;notprasingmyself&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In this summer I have explored unlimited repository out there on &lt;a href=&quot;https://github.com/pravj&quot;&gt;GitHub&lt;/a&gt;. some for solving any kind of issues I was facing in using them or some for just sake of learning anything new, be it any new language(Ruby) or a new field(Vim) for me.&lt;/p&gt;

&lt;p&gt;One interesting recap is that I was working on a project for my team(&lt;a href=&quot;https://twitter.com/sdslabs&quot;&gt;SDSLabs&lt;/a&gt;) and I was using a ruby library as HTTP client, &lt;a href=&quot;https://github.com/rest-client/rest-client&quot;&gt;Rest-Client&lt;/a&gt;. I started facing issue(obviously) as I was new to Ruby. So I started reading code of Rest-Client just to take a look that what are the ingredients and their quantity in this library. &lt;/p&gt;

&lt;p&gt;finally I completed Rest-Client with a better understanding that solved all my issues with it and gave me introduction to a new field, which is :&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;How does HTTP and REST clients works&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Also while learning about the large world of &lt;strong&gt;&lt;a href=&quot;https://github.com/pravj/dotfiles/tree/learning/vim&quot;&gt;Vim&lt;/a&gt;&lt;/strong&gt;, I started developing on a rough idea in my mind. which was to develop a Pong like game, playable in Vim editor itself. I tried it, under the name of &lt;a href=&quot;https://github.com/pravj/vingvong&quot;&gt;vingvong.&lt;/a&gt;. But I was unable to complete it because Vim does not support Asynchronous subprocesses, so I stopped the development.&lt;/p&gt;

&lt;p&gt;May be you have any other way of implementing same or I&amp;#39;m wrong somewhere. If so, please let &lt;a href=&quot;https://twitter.com/hackpravj&quot;&gt;me&lt;/a&gt; know.&lt;/p&gt;

&lt;p&gt;In the same mission, one day I was going through project &lt;a href=&quot;https://github.com/visionmedia/nshell&quot;&gt;nshell&lt;/a&gt; of &lt;em&gt;one and only&lt;/em&gt; &lt;strong&gt;&lt;a href=&quot;https://github.com/visionmedia&quot;&gt;visionmedia&lt;/a&gt;&lt;/strong&gt;. I selected this repository because I recently developed an interest in &lt;a href=&quot;https://github.com/pravj/dotfiles&quot;&gt;bash, shells and dotfiles management&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I saw, he was using &lt;a href=&quot;http://nodejs.org/docs/latest/api/stream.html#stream_stream&quot;&gt;Stream&lt;/a&gt; in nshell development. I googled about streams and found many resources, this includes &lt;a href=&quot;http://nodejs.org/docs/latest/api/stream.html&quot;&gt;official stream docs&lt;/a&gt; and &lt;a href=&quot;https://github.com/substack/stream-handbook&quot;&gt;stream-handbook&lt;/a&gt; and many others.&lt;/p&gt;

&lt;p&gt;Before that day, I have seen many people starring the &lt;em&gt;stream-handbook&lt;/em&gt; in my GitHub feed. But I was like &lt;em&gt;this thing does not belongs to me, right now&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;But that day I opened &lt;em&gt;stream-handbook&lt;/em&gt; with a motive to learn something. I started reading it and found that &lt;em&gt;Streams&lt;/em&gt; is a nice topic to learn.&lt;/p&gt;

&lt;p&gt;Suddenly my mind searched something from it&amp;#39;s index and showed me result in form of an idea. It was :&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Why don&amp;#39;t you just restart that Pingpong thing with this Stream ?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;that&amp;#39;s all I wanted.&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;Development&lt;/h1&gt;

&lt;p&gt;when I started thinking about Developing, shaping it as a &lt;strong&gt;Node Module&lt;/strong&gt; was the only and right option. I knew already that writing a Node Module in &lt;strong&gt;CoffeeScript&lt;/strong&gt; is both fancy(for world) and easy(for me).&lt;/p&gt;

&lt;p&gt;There was another reason for Choosing CoffeeScript, my experience in CoffeeScript was only limited to write &lt;a href=&quot;https://gist.github.com/pravj/2f500607d0aa1bae26a2&quot;&gt;some&lt;/a&gt; hubot scripts for customizing internal communication at &lt;a href=&quot;https://github.com/sdslabs&quot;&gt;SDSLabs.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I was a cool opportunity to learn and do more things in CoffeeScript, so finally I was like :&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;OK, lets move with CoffeeScript.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;One coolest thing is that for CoffeeScript, I have only used &lt;a href=&quot;http://arcturo.github.io/library/coffeescript/&quot;&gt;The Little Book on CoffeeScript&lt;/a&gt;, no StackOverflow here.&lt;/p&gt;

&lt;p&gt;The current version of &lt;strong&gt;termping&lt;/strong&gt; is open-sourced at &lt;a href=&quot;https://github.com/pravj/termping&quot;&gt;GitHub&lt;/a&gt;, feel free to contribute to it.&lt;/p&gt;

&lt;p&gt;Now I&amp;#39;ll try to explain Source Code of &lt;strong&gt;termping.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Here is the current file structure of the repository, once you browse it.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;.
|__.npmignore
|__src
| |__objects.coffee
| |__game.coffee
| |__movement.coffee
| |__status.coffee
| |__source.coffee
|__Cakefile
|__bin
| |__termping
|__package.json
|__.gitignore
|__README.md
|__docs
| |__termping.gif
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;PS : this tree structure is generated from &lt;a href=&quot;https://github.com/pravj/dotfiles/blob/learning/bin/treegen&quot;&gt;treegen&lt;/a&gt;, my own attempt as the alternative of the great &lt;code&gt;tree&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;you can see, main things are inside &lt;code&gt;/src&lt;/code&gt; directory.&lt;/p&gt;

&lt;h4&gt;1. objects.coffee&lt;/h4&gt;

&lt;p&gt;Object class keeps the game objects, including &lt;em&gt;ball&lt;/em&gt;, &lt;em&gt;paddle&lt;/em&gt; and &lt;em&gt;data&lt;/em&gt; to be rendered on screen. It also helps to populate the data initially according to terminal size.&lt;/p&gt;

&lt;h4&gt;2. game.coffee&lt;/h4&gt;

&lt;p&gt;Game class combines all available things at one place and makes it possible to play the game. It also invoke things in other classes on some particular events like &lt;em&gt;left&lt;/em&gt;/&lt;em&gt;right&lt;/em&gt; or &lt;em&gt;SpaceBar&lt;/em&gt; key press, that enable pause/resume or movement of paddle.&lt;/p&gt;

&lt;h4&gt;3. movement.coffee&lt;/h4&gt;

&lt;p&gt;Movement class handles all movement related things. Ex. moving of user&amp;#39;s paddle, movement of ball, movement of computer&amp;#39;s paddle and one most useful thing &lt;em&gt;Collision Detection&lt;/em&gt;.&lt;/p&gt;

&lt;h4&gt;4. status.coffee&lt;/h4&gt;

&lt;p&gt;status.coffee carries all variable and their values that different classes use throughout the game. which includes, velocity of ball, paddle positions, ball positions, state of game etc.&lt;/p&gt;

&lt;h4&gt;5. source.coffee&lt;/h4&gt;

&lt;p&gt;Source class is leading character in the movie. This is the place where all that Stream thing shows the magic. What it does is to &lt;strong&gt;pipe&lt;/strong&gt; the data to the &lt;strong&gt;stdout&lt;/strong&gt; that is to be rendered on screen. That&amp;#39;s why I named it as Source. Other classes just work together and periodically update the data.&lt;/p&gt;

&lt;h1&gt;Learning&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;finally the thing is that, was this all worth doing ?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Answer is : &lt;strong&gt;Obviously, Yes. It&amp;#39;s always good to be pragmatic.&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Now I feel as good with &lt;strong&gt;CoffeeScript&lt;/strong&gt; as I feel with my love, &lt;strong&gt;Python&lt;/strong&gt;.

&lt;ul&gt;
&lt;li&gt;as the Book says, CoffeeScript is a little language, but it&amp;#39;s pretty cool one.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Finally I have a &lt;a href=&quot;https://www.npmjs.org/package/termping&quot;&gt;NPM Module&lt;/a&gt; under my name \m/.

&lt;ul&gt;
&lt;li&gt;I have completed things in form of NPM modules 2-3 times but never published them, because I developed them for internal/local use only.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;I continued working on it, because I just wanted to complete that un-complete &lt;a href=&quot;https://github.com/pravj/vingvong&quot;&gt;vingvong&lt;/a&gt; thing.

&lt;ul&gt;
&lt;li&gt;Finally now, the revenge has been taken, &lt;strong&gt;Yo&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;It was the motive to complete it, that&amp;#39;s why I have added that ♥ in starting, instead of adding it in last.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;Extra Learning&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;Extra learning just means, things that I explored while developing it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;termping&lt;/strong&gt; is entirely developed in &lt;strong&gt;Vim&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;you can smell it&lt;/em&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Git&lt;/strong&gt; repo in &lt;strong&gt;termping&lt;/strong&gt; uses a pattern in it&amp;#39;s &lt;a href=&quot;https://github.com/pravj/termping/commits/master&quot;&gt;commit messages&lt;/a&gt;.

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Commit messages uses a Prefix with them, which is&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;add&lt;/strong&gt; : when your commit is adding something new to the repository.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;change&lt;/strong&gt; : when your commit is changing something that already exists.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;remove&lt;/strong&gt; : when your commit is removing things from the repository.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;fix&lt;/strong&gt; : when commit fixes something wrong with repository.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;update&lt;/strong&gt; : when commit updates version info about repository.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Commit messages respects everything &lt;a href=&quot;http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html&quot;&gt;suggested&lt;/a&gt; by the great man of &lt;em&gt;Vim World&lt;/em&gt;, &lt;a href=&quot;https://github.com/tpope&quot;&gt;Tim Pope&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;Contribution&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;termping&lt;/strong&gt; is still not complete, what you can contribute is :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A scoring thing, that counts score and decide winner when one player reach at score limit.&lt;/li&gt;
&lt;li&gt;A level thing, that divides the game in parts depending on level of difficulty.&lt;/li&gt;
&lt;li&gt;Feel free to open any &lt;a href=&quot;https://github.com/pravj/termping/issues&quot;&gt;issue&lt;/a&gt; or &lt;a href=&quot;https://github.com/pravj/termping/pulls&quot;&gt;Pull requests&lt;/a&gt; with a feature you want there.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I am not directly writing any more code to it right now, because I have to get involved with some other necessary things, but I will try to helps anyone interested.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It was a great journey so far, with nice learning experience.&lt;/strong&gt; &lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>introducing <b>modified</b> lanyon and harry and me</title>
   <link href="//pravj.github.io/blog/introducing-modified-lanyon-and-harry-and-me/"/>
   <updated>2014-05-23T00:00:00+05:30</updated>
   <id>//pravj.github.io/blog/introducing-modified-lanyon-and-harry</id>
   <content type="html">&lt;p&gt;&lt;code&gt;probably you don&amp;#39;t know me. ok, I&amp;#39;m telling you that.&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I am Pravendra. Developer at awesome &lt;a href=&quot;https://twitter.com/sdslabs&quot;&gt;SDSLabs&lt;/a&gt; and Computer Science student at IIT Roorkee, 
when I&amp;#39;m not scrolling in sublime-text or vim, I am watching Discovery Channel :bowtie:&lt;/p&gt;

&lt;p&gt;I am a sincere reader and It&amp;#39;s always nice for me to read about other&amp;#39;s experiences in different fields. Sometimes it shows new things that you are not aware about.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;a thought of having blog always excited me after reading about nice people around me.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;my choice for a setup was &lt;code&gt;Jekyll&lt;/code&gt; powered blog hosted with &lt;code&gt;Github Pages&lt;/code&gt;, so I started searching for a cool Jekyll theme.&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/poole/lanyon&quot;&gt;Lanyon&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Definition according to it&amp;#39;s Developer &lt;a href=&quot;https://twitter.com/mdo&quot;&gt;@mdo&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Lanyon is an unassuming Jekyll theme that places content first by tucking away navigation in a hidden drawer. It&amp;#39;s based on Poole, the Jekyll butler.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;it&amp;#39;s really a cool theme with pretty nice design and a Toggelable sliding sidebar to provide enough space for your content.&lt;/p&gt;

&lt;p&gt;themes avaiable on internet are generally meant to be used as it is or without any hesitation but I wanted something extra in the theme. I wanted to have tags for each post and post sorting according to tags.&lt;/p&gt;

&lt;p&gt;one more thing was that original Lanyon theme serves fix posts on a page and provides pagination(customizable). So if you want to read first post, you have to manually visit all pages till you reach at last page.&lt;/p&gt;

&lt;p&gt;then an old chat with &lt;a href=&quot;https://twitter.com/leostatic&quot;&gt;@sm&lt;/a&gt; motivated me to do something on my own , he said :&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;its never bad to develop a thing, if you are not copying something entirely.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;modified Lanyon&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/pravj/modified-lanyon&quot;&gt;modified Lanyon&lt;/a&gt; is the jekyll theme, I ended up while customizing original Lanyon.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;things I added to the original theme are :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;now it shows title, date and related tags for each post on main page&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;it provides easy access to all posts&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;there is a section for all tags in posts, its lists all posts under each tag in archive.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;reader can easily visit for each post under a tag.&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;there is a timeline section showing all posts sorted according to year of post, having latest post first in timeline.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;clicking on a date of post opens the timeline section&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I added support to have smileys in blog, for this I created a jekyll plugin &lt;a href=&quot;https://github.com/pravj/Harry&quot;&gt;Harry&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;using this you can use all emojis available on the famous www.emoji-cheat-sheet.com&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;modifying Lanyon&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;each change I did was done with Jekyll Plugins&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt; have cool &lt;a href=&quot;http://jekyllrb.com/docs/plugins/&quot;&gt;plugin&lt;/a&gt; support that allow you to create custom generated content specific to your site.&lt;/p&gt;

&lt;p&gt;according to Jekyll documentation :&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;in your site&amp;#39;s root directory inside &lt;code&gt;_plugins/&lt;/code&gt; directory any file ending in &lt;code&gt;.rb&lt;/code&gt; will be loaded before Jekyll generates your site.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;to change the index page rendering style, I used &lt;a href=&quot;https://github.com/Shopify/liquid&quot;&gt;Liquid&lt;/a&gt; Tags and Filters in index.html to show listing of all posts with title, date and tags. see it &lt;a href=&quot;https://github.com/pravj/modified-lanyon/blob/master/index.html&quot;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;to list all posts under a particular tag :&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;I created &lt;code&gt;tagger.rb&lt;/code&gt;, placed it in &lt;code&gt;_plugins/&lt;/code&gt;. it maps each tag in archive to related posts having that tag and let you use that mapped data via &lt;a href=&quot;http://jekyllrb.com/docs/variables/#site-variables&quot;&gt;site.pages&lt;/a&gt; variable. see it &lt;a href=&quot;https://github.com/pravj/modified-lanyon/blob/master/_plugins/tagger.rb&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;to create the archive timeline :&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;I am using &lt;code&gt;timeline.rb&lt;/code&gt; from this &lt;a href=&quot;http://tech.pro/tutorial/1299/getting-started-with-jekyll-plugins&quot;&gt;tutorial&lt;/a&gt;, I reversed the data to show latest post first in timeline. see it &lt;a href=&quot;https://github.com/pravj/modified-lanyon/blob/master/_plugins/timeline.rb&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;Harry&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/pravj/Harry&quot;&gt;Harry&lt;/a&gt; is the jekyll plugin I developed, it lets you use any smiley from &lt;a href=&quot;http://www.emoji-cheat-sheet.com/&quot;&gt;emoji-cheat-sheet&lt;/a&gt; in your blog.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;it was fun developing this, because I just love smileys. specially this :grinning:&lt;/p&gt;

&lt;p&gt;it saves any valid smiley image in &lt;code&gt;public/smileys/&lt;/code&gt; from &lt;a href=&quot;http://www.emoji-cheat-sheet.com/&quot;&gt;emoji-cheat-sheet&lt;/a&gt; and serve from here. more about using Harry can be found &lt;a href=&quot;https://github.com/pravj/Harry/blob/master/README.md&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Problem with using Jekyll Plugins on GitHub Pages&lt;/h3&gt;

&lt;p&gt;Github Pages don&amp;#39;t allow you to use plugins because of security reasons, so I am pushing only generated static files to &lt;a href=&quot;https://github.com/pravj/pravj.github.io&quot;&gt;repository&lt;/a&gt; powering this blog&lt;/p&gt;

&lt;h3&gt;Source Code&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/pravj/pravj.github.io&quot;&gt;this blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/pravj/modified-lanyon&quot;&gt;modified-lanyon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/pravj/Harry&quot;&gt;Harry&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 

</feed>
