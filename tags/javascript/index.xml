<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on hack(pravj)</title>
    <link>https://pravj.github.io/tags/javascript/</link>
    <description>Recent content in Javascript on hack(pravj)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 02 Aug 2014 12:34:58 +0300</lastBuildDate>
    
	<atom:link href="https://pravj.github.io/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Organizing Angular Apps for Testing</title>
      <link>https://pravj.github.io/articles/organizing-angular-apps-for-testing/</link>
      <pubDate>Sat, 02 Aug 2014 12:34:58 +0300</pubDate>
      
      <guid>https://pravj.github.io/articles/organizing-angular-apps-for-testing/</guid>
      <description>In the last post, I talked about how we moved away from jQuery to Angularjs to power our single page application. To recap, the major problems with our existing code which convinced us to do a rewrite -
 The existing code was written by a team which was no longer with the project. No one on the existing team had a strong understanding of how the code worked. Without any structure, the code was extremely hard to maintain and understand.</description>
    </item>
    
    <item>
      <title>Making the Blog Instant</title>
      <link>https://pravj.github.io/articles/making-the-blog-instant/</link>
      <pubDate>Sat, 08 Feb 2014 12:34:58 +0300</pubDate>
      
      <guid>https://pravj.github.io/articles/making-the-blog-instant/</guid>
      <description>InstantClick.js was released on Hacker News today and I thought I will give it a whirl on my blog.
InstantClick is a simple library takes makes your pages faster by prefetching the target URL on hover (&amp;amp; touchstart in case of mobile). Based on the concept of Turbolinks and PJAX it works by utilizing the 200ms-300ms difference between a hover and a click to fetch the target content via an Ajax call.</description>
    </item>
    
  </channel>
</rss>